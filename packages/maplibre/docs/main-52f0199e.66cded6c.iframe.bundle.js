"use strict";(self.webpackChunk_mapcomponents_react_maplibre=self.webpackChunk_mapcomponents_react_maplibre||[]).push([[645],{57065:(e,t,n)=>{n.r(t),n.d(t,{Linestring:()=>g,__namedExportsOrder:()=>y,default:()=>f});var r=n(2784),o=n(68299),a=n(99146),i=n(61401);const s=JSON.parse('{"type":"Feature","properties":{},"geometry":{"type":"LineString","coordinates":[[7.1074676513671875,50.74340774029213],[7.0992279052734375,50.756441089372665],[7.079315185546874,50.764693667025014],[7.045669555664062,50.77945780529241],[7.030563354492187,50.79161300845443],[7.0291900634765625,50.80940599750376],[7.0236968994140625,50.820685846099174],[7.0085906982421875,50.825891011253546],[6.9879913330078125,50.826758482363275],[6.97906494140625,50.835432306955276],[6.9824981689453125,50.84583876895451],[6.9962310791015625,50.85147463352982],[7.012023925781249,50.85710981721644],[7.021636962890625,50.86664473085768],[7.0367431640625,50.872278081520406],[7.0477294921875,50.877044231111014],[7.052536010742187,50.88397594225127]]}}'),l=JSON.parse('{"type":"Feature","properties":{},"geometry":{"type":"LineString","coordinates":[[7.0635223388671875,50.71385204707258],[7.06146240234375,50.709721458354075],[7.063865661621094,50.70298129536074],[7.064552307128906,50.69906720767511],[7.059059143066406,50.69428287906098],[7.05596923828125,50.68797551838366],[7.0580291748046875,50.680797145321655],[7.062835693359375,50.67514068397085],[7.060432434082031,50.6686131506577],[7.051849365234375,50.659255436656736],[7.044639587402344,50.6512019574539],[7.0484161376953125,50.64271166020676],[7.0566558837890625,50.63748609931014]]}}');function u(e){return u="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},u(e)}function c(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function m(e,t,n){return(t=function(e){var t=function(e,t){if("object"!==u(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==u(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"===u(t)?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function p(){return p=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},p.apply(this,arguments)}function d(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}const f={title:"MapComponents/MlTransitionGeoJsonLayer",component:o.Z,argTypes:{url:{},layer:{}},decorators:a.Z};var g=function(e){var t,n,a=(0,i.Z)({mapId:"map_1"}),u=(t=(0,r.useState)(s),n=2,function(e){if(Array.isArray(e))return e}(t)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,a,i,s=[],l=!0,u=!1;try{if(a=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;l=!1}else for(;!(l=(r=a.call(n)).done)&&(s.push(r.value),s.length!==t);l=!0);}catch(e){u=!0,o=e}finally{try{if(!l&&null!=n.return&&(i=n.return(),Object(i)!==i))return}finally{if(u)throw o}}return s}}(t,n)||function(e,t){if(e){if("string"==typeof e)return d(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?d(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),c=u[0],m=u[1],f=(0,r.useRef)(!1);return(0,r.useEffect)((function(){a.map&&!f.current&&(console.log("Hello"),f.current=!0,a.map.setCenter({lng:7.137609868988648,lat:50.74746799549129}),a.map.setZoom(9.5),setTimeout((function(){m(l)}),4e3))}),[c,a.map]),r.createElement(r.Fragment,null,r.createElement(o.Z,p({type:"line",geojson:c,transitionTime:2e3},e)))}.bind({});g.parameters={},g.args={paint:{"line-color":"red","line-width":4}},g.parameters=function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?c(Object(n),!0).forEach((function(t){m(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):c(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}({storySource:{source:"(props) => {\n\tconst mapHook = useMap({mapId: 'map_1'});\n\tconst [geojson, setGeojson] = useState(sample_geojson_1);\n\tconst initializedRef = useRef(false);\n\n\tuseEffect(() => {\n\t\tif (!mapHook.map || initializedRef.current) return;\n\n\t\tconsole.log('Hello')\n\t\tinitializedRef.current = true;\n\t\tmapHook.map.setCenter({ lng: 7.137609868988648, lat: 50.74746799549129 });\n\t\tmapHook.map.setZoom(9.5);\n\n\t\tsetTimeout(() => {\n\t\t\tsetGeojson(sample_geojson_2);\n\t\t}, 4000);\n\t}, [geojson, mapHook.map]);\n\n\treturn (\n\t\t<>\n\t\t\t<MlTransitionGeoJsonLayer type=\"line\" geojson={geojson} transitionTime={2000} {...props} />\n\t\t</>\n\t);\n}"}},g.parameters);var y=["Linestring"]},3527:(e,t,n)=>{n.r(t),n.d(t,{ExampleConfig:()=>h,__namedExportsOrder:()=>v,default:()=>b});var r=n(2784),o=n(13980),a=n.n(o),i=n(57058);function s(e){return s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},s(e)}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function u(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t,n){return(t=function(e){var t=function(e,t){if("object"!==s(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==s(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"===s(t)?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var m=function(e){var t=(0,i.Z)({mapId:e.mapId,watch:u({layers:!0,sources:!1,viewport:!1},e.watch),filter:u({},e.filter)}),n=(0,r.useRef)(0);return n.current=n.current+1,r.createElement(r.Fragment,null,r.createElement("div",{style:{overflow:"hidden",width:"100px",height:"20px"}},"Render: ",n.current,r.createElement("br",null),r.createElement("pre",null,JSON.stringify(t,null," "))))};m.defaultProps={mapId:void 0},m.propTypes={mapId:a().string},m.__docgenInfo={description:"Renders a collapsable top-drawer containing live map debug information\n\n@param {object} props\n@param {string} props.mapId Id of the target MapLibre instance in mapContext\n\n@component",methods:[],displayName:"MlUseMapDebugger",props:{mapId:{defaultValue:{value:"undefined",computed:!0},description:"Id of the target MapLibre instance in mapContext",type:{name:"string"},required:!1}}};const p=m;"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/MlUseMapDebugger/MlUseMapDebugger.js"]={name:"MlUseMapDebugger",docgenInfo:m.__docgenInfo,path:"src/components/MlUseMapDebugger/MlUseMapDebugger.js"});var d=n(99146);function f(e){return f="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},f(e)}function g(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function y(e,t,n){return(t=function(e){var t=function(e,t){if("object"!==f(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==f(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"===f(t)?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}const b={title:"MapComponents/MlUseMapDebugger",component:p,argTypes:{url:{},layer:{}},decorators:d.Z};var h=function(e){return r.createElement(r.Fragment,null,r.createElement(p,e))}.bind({});h.parameters={},h.args={mapId:"map_1"},h.parameters=function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?g(Object(n),!0).forEach((function(t){y(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):g(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}({storySource:{source:"(props) => {\n\treturn (\n\t\t<>\n\t\t\t<MlUseMapDebugger {...props} />\n\t\t</>\n\t);\n}"}},h.parameters);var v=["ExampleConfig"]},50763:(e,t,n)=>{n.r(t),n.d(t,{ExampleConfig:()=>d,__namedExportsOrder:()=>f,default:()=>p});var r=n(2784),o=n(48904),a=n(86104),i=n(99146),s=n(72642);function l(e){return l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},l(e)}function u(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e,t,n){return(t=function(e){var t=function(e,t){if("object"!==l(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==l(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"===l(t)?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function m(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}const p={title:"MapComponents/MlVectorTileLayer",component:o.Z,argTypes:{url:{},layer:{}},decorators:i.Z};var d=function(e){var t,n,i=(t=(0,r.useState)(!0),n=2,function(e){if(Array.isArray(e))return e}(t)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,a,i,s=[],l=!0,u=!1;try{if(a=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;l=!1}else for(;!(l=(r=a.call(n)).done)&&(s.push(r.value),s.length!==t);l=!0);}catch(e){u=!0,o=e}finally{try{if(!l&&null!=n.return&&(i=n.return(),Object(i)!==i))return}finally{if(u)throw o}}return s}}(t,n)||function(e,t){if(e){if("string"==typeof e)return m(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?m(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),l=i[0],u=i[1];return r.createElement(r.Fragment,null,r.createElement(a.Z,{unmovableButtons:r.createElement(s.Z,{color:"primary",variant:l?"contained":"outlined",onClick:function(){return u(!l)}},"Vector Tile Layer")}),l?r.createElement(o.Z,e):"")}.bind({});d.parameters={},d.args={mapId:"map_1",url:"https://wms.wheregroup.com/tileserver/tile/tileserver.php?/europe-0-14/index.json?/europe-0-14/{z}/{x}/{y}.pbf",layers:[{id:"water",type:"fill","source-layer":"water",layout:{},paint:{"fill-color":"#0905f5","fill-opacity":.5}},{id:"buildings",type:"fill","source-layer":"building",layout:{},paint:{"fill-color":"#717875"}}],sourceOptions:{minzoom:0,maxzoom:20}},d.parameters=function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?u(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):u(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}({storySource:{source:"(args) => {\n\tconst [showLayer, setShowLayer] = useState(true);\n\n\treturn (\n\t\t<>\n\t\t\t<TopToolbar\n\t\t\t\tunmovableButtons={\n\t\t\t\t\t<Button\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tvariant={showLayer ? 'contained' : 'outlined'}\n\t\t\t\t\t\tonClick={() => setShowLayer(!showLayer)}\n\t\t\t\t\t>\n\t\t\t\t\t\tVector Tile Layer\n\t\t\t\t\t</Button>\n\t\t\t\t}\n\t\t\t/>\n\t\t\t{showLayer ? <MlVectorTileLayer {...args} /> : ''}\n\t\t</>\n\t);\n}"}},d.parameters);var f=["ExampleConfig"]},77830:(e,t,n)=>{n.r(t),n.d(t,{ExampleConfig:()=>c,__namedExportsOrder:()=>m,default:()=>u});var r=n(2784),o=n(71022),a=n(99146);function i(e){return i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},i(e)}function s(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function l(e,t,n){return(t=function(e){var t=function(e,t){if("object"!==i(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==i(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"===i(t)?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}const u={title:"MapComponents/MlWmsFeatureInfoPopup",component:o.Z,argTypes:{url:{},layer:{}},decorators:a.Z};var c=function(){return r.createElement(o.Z,null)}.bind({});c.parameters={},c.args={},c.parameters=function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?s(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):s(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}({storySource:{source:"() => <MlWmsFeatureInfoPopup />"}},c.parameters);var m=["ExampleConfig"]},42976:(e,t,n)=>{n.r(t),n.d(t,{ExampleConfig:()=>f,__namedExportsOrder:()=>g,default:()=>d});var r=n(2784),o=n(47281),a=n(86104),i=n(72642),s=n(99146);function l(e){return l="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},l(e)}function u(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function c(e,t,n){return(t=function(e){var t=function(e,t){if("object"!==l(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==l(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"===l(t)?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function m(){return m=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},m.apply(this,arguments)}function p(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}n(44647);const d={title:"MapComponents/MlWmsLayer",component:o.Z,argTypes:{url:{},layer:{}},decorators:s.Z};var f=function(e){var t,n,s=(t=(0,r.useState)(!0),n=2,function(e){if(Array.isArray(e))return e}(t)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,a,i,s=[],l=!0,u=!1;try{if(a=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;l=!1}else for(;!(l=(r=a.call(n)).done)&&(s.push(r.value),s.length!==t);l=!0);}catch(e){u=!0,o=e}finally{try{if(!l&&null!=n.return&&(i=n.return(),Object(i)!==i))return}finally{if(u)throw o}}return s}}(t,n)||function(e,t){if(e){if("string"==typeof e)return p(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?p(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),l=s[0],u=s[1];return r.createElement(r.Fragment,null,r.createElement(a.Z,{unmovableButtons:r.createElement(i.Z,{color:"primary",variant:l?"contained":"outlined",onClick:function(){return u(!l)}},"WMS")}),r.createElement(o.Z,m({visible:l},e)))}.bind({});f.parameters={},f.args={url:"https://www.wms.nrw.de/geobasis/wms_nw_uraufnahme",urlParameters:{layers:"nw_uraufnahme_rw"}},f.parameters=function(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?u(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):u(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}({storySource:{source:"(props) => {\n\tconst [showLayer, setShowLayer] = useState(true);\n\n\treturn (\n\t\t<>\n\t\t\t<TopToolbar\n\t\t\t\tunmovableButtons={\n\t\t\t\t\t<Button\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tvariant={showLayer ? 'contained' : 'outlined'}\n\t\t\t\t\t\tonClick={() => setShowLayer(!showLayer)}\n\t\t\t\t\t>\n\t\t\t\t\t\tWMS\n\t\t\t\t\t</Button>\n\t\t\t\t}\n\t\t\t/>\n\t\t\t<MlWmsLayer visible={showLayer} {...props} />\n\t\t</>\n\t);\n}"}},f.parameters);var g=["ExampleConfig"]},68999:(e,t,n)=>{n.r(t),n.d(t,{ExampleConfig:()=>k,ExampleFixedConfig:()=>B,__namedExportsOrder:()=>W,default:()=>q});var r=n(2784),o=n(70292),a=n(72642),i=n(76446),s=n(45116),l=n(42440),u=n(99146),c=n(42962),m=n(86104),p=n(33361),d=[{duration:2500,props:{bubbleTop:"200px",bubbleLeft:"-180px",textMarginTop:"150px",textMarginLeft:"200px",iconTransform:"rotate(90deg)",iconMarginTop:"-210px",iconMarginLeft:"200px",zIndex:1210},content:r.createElement(r.Fragment,null,"Introduce an ",r.createElement("br",null),"WMS Service ",r.createElement("br",null)," URL here")},{duration:3e3,props:{bubbleLeft:"-40px",bubbleTop:"-150px",textMarginTop:"240px",textMarginLeft:"75px",iconTransform:"rotate(90deg)",iconMarginTop:"-125px",iconMarginLeft:"280px",zIndex:1210},content:r.createElement(r.Fragment,null,"In demo mode we ",r.createElement("br",null)," provide you some ",r.createElement("br",null)," WMS links ",r.createElement("br",null)," to copy and use.")}];function f(e){return r.createElement(r.Fragment,null,r.createElement(p.Z,{steps:d,open:e.open}))}try{f.displayName="MlWmsLoaderInstructions",f.__docgenInfo={description:"",displayName:"MlWmsLoaderInstructions",props:{open:{defaultValue:null,description:"",name:"open",required:!0,type:{name:"boolean"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/MlWmsLoader/utils/MlWmsLoaderInstructions.tsx#MlWmsLoaderInstructions"]={docgenInfo:f.__docgenInfo,name:"MlWmsLoaderInstructions",path:"src/components/MlWmsLoader/utils/MlWmsLoaderInstructions.tsx#MlWmsLoaderInstructions"})}catch(e){}var g=n(98396),y=n(15725),b=n(2658),h=n(67720),v=n(16628),S=n(99226),_=n(64680),O=n(80162),w=n(92679);function M(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var x={position:"absolute",zIndex:500,top:"50%",left:"50%",transform:"translate(-50%, -50%)",width:"400px",height:"600px",boxShadow:20,alignItems:"center",padding:0,opacity:1,transition:"opacity 1s"},L={position:"absolute",top:"10%",left:"20%",width:"60%",height:"70%",bgcolor:"background.paper",boxShadow:24,zIndex:200,overflow:"scroll"},E=[{id:"1",title:"HistOSM",description:"Historic objects stored in the OpenStreetMap database",link:"https://maps.heigit.org/histosm/wms"},{id:"2",title:"MagOSM",description:"MagOSM is a project of the company Magellium which offers services related to thematic data from OpenStreetMap. Currently these services are provided at the scale of metropolitan France. The data of the different services are updated daily.",link:"https://magosm.magellium.com/geoserver/wms"},{id:"3",title:"NRW_vdop",description:"The WMS NW vDOP Geobasis North Rhine-Westphalia provides intermediate results from the production process of the digital orthophotos (DOP).",link:"https://www.wms.nrw.de/geobasis/wms_nw_vdop"}];function T(e){var t,n,o=(0,g.Z)("(max-width:900px)"),i=(t=(0,r.useState)(),n=2,function(e){if(Array.isArray(e))return e}(t)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,a,i,s=[],l=!0,u=!1;try{if(a=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;l=!1}else for(;!(l=(r=a.call(n)).done)&&(s.push(r.value),s.length!==t);l=!0);}catch(e){u=!0,o=e}finally{try{if(!l&&null!=n.return&&(i=n.return(),Object(i)!==i))return}finally{if(u)throw o}}return s}}(t,n)||function(e,t){if(e){if("string"==typeof e)return M(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?M(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),l=i[0],u=i[1],c=function(){return r.createElement(r.Fragment,null,E.map((function(e){return r.createElement(y.ZP,{item:!0,xs:12,sx:{marginTop:5},key:e.id},r.createElement(b.Z,{variant:"h6"},e.title),r.createElement(b.Z,{variant:"body2"},e.description),r.createElement(s.Z,{value:e.link,size:"small"}),r.createElement(a.Z,{variant:"contained",sx:{marginTop:.2},onClick:function(){var t;u(e.link),null===(t=document.getElementById("wms_text_field"))||void 0===t||t.focus()}},r.createElement(O.Z,null)),r.createElement(h.Z,{sx:{marginTop:"10px"}}))})))};return(0,r.useEffect)((function(){l&&e.load(l)}),[l]),r.createElement(r.Fragment,null,e.open&&r.createElement(v.Z,{in:e.open,appear:!1},r.createElement(S.Z,{sx:o?L:x},r.createElement(_.Z,{sx:{padding:"20px"}},r.createElement(y.ZP,{container:!0},r.createElement(y.ZP,{item:!0,xs:10},r.createElement(b.Z,{id:"modal-modal-title",variant:"h6"},"WMS Links")),r.createElement(y.ZP,{item:!0,xs:2},r.createElement(a.Z,{onClick:e.close},r.createElement(w.Z,{sx:{color:"text.primary"}})))),r.createElement(h.Z,null),r.createElement(y.ZP,{container:!0},r.createElement(c,null))))))}try{T.displayName="WMSLinks",T.__docgenInfo={description:"",displayName:"WMSLinks",props:{load:{defaultValue:null,description:"",name:"load",required:!0,type:{name:"(str: string) => void"}},open:{defaultValue:null,description:"",name:"open",required:!0,type:{name:"boolean"}},close:{defaultValue:null,description:"",name:"close",required:!0,type:{name:"() => void"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/MlWmsLoader/utils/WMSLinks.tsx#WMSLinks"]={docgenInfo:T.__docgenInfo,name:"WMSLinks",path:"src/components/MlWmsLoader/utils/WMSLinks.tsx#WMSLinks"})}catch(e){}const R=JSON.parse('{"layers":[{"visible":false,"Attribution":{"Title":"© Magellium","OnlineResource":"https://magosm.magellium.com/informations.html"},"Name":"magosm:france_buildings_polygon","Title":"Emprises des bâtiments - France métropolitaine","Abstract":"","KeywordList":["features","france_buildings_polygon"],"EX_GeographicBoundingBox":[-6.2882069888366505,37.43560720274539,14.373044545912343,53.0918187695962],"BoundingBox":[{"crs":"CRS:84","extent":[-6.2882069888366505,37.43560720274539,14.373044545912343,53.0918187695962],"res":[null,null]},{"crs":"EPSG:3857","extent":[-700000,4500000,1600000,7000000],"res":[null,null]}],"Style":[{"Name":"france_buildings","Title":"france_buildings","LegendURL":[{"Format":"image/png","OnlineResource":"https://magosm.magellium.com/geoserver/ows?service=WMS&request=GetLegendGraphic&format=image%2Fpng&width=20&height=20&layer=magosm%3Afrance_buildings_polygon","size":[20,20]}]},{"Name":"france_buildings","Title":"france_buildings","LegendURL":[{"Format":"image/png","OnlineResource":"https://magosm.magellium.com/geoserver/ows?service=WMS&request=GetLegendGraphic&format=image%2Fpng&width=20&height=20&layer=magosm%3Afrance_buildings_polygon&style=france_buildings","size":[20,20]}]}],"MaxScaleDenominator":150000,"queryable":true,"opaque":false,"noSubsets":false},{"visible":false,"Attribution":{"Title":"© Magellium","OnlineResource":"https://magosm.magellium.com/informations.html"},"Name":"magosm:france_constructions","Title":"Localisations des constructions - France métropolitaine","Abstract":"","KeywordList":["features","Localisations des constructions - France métropolitaine"],"EX_GeographicBoundingBox":[-6.2882069888366505,37.43560720274539,14.373044545912343,53.0918187695962],"BoundingBox":[{"crs":"CRS:84","extent":[-6.2882069888366505,37.43560720274539,14.373044545912343,53.0918187695962],"res":[null,null]},{"crs":"EPSG:3857","extent":[-700000,4500000,1600000,7000000],"res":[null,null]}],"Style":[{"Name":"france_constructions","Title":"france_constructions","LegendURL":[{"Format":"image/png","OnlineResource":"https://magosm.magellium.com/geoserver/ows?service=WMS&request=GetLegendGraphic&format=image%2Fpng&width=20&height=20&layer=magosm%3Afrance_constructions","size":[175,220]}]}],"MaxScaleDenominator":70000000,"queryable":true,"opaque":false,"noSubsets":false},{"visible":true,"Attribution":{"Title":"© Magellium","OnlineResource":"https://magosm.magellium.com/informations.html"},"Name":"magosm:france_landuses_naturals_polygon","Title":"Occupation du sol - France métropolitaine","Abstract":"Extrait quotidien d\'éléments d\'occupation du sol naturels et artificiels en France métropolitaine présentes dans la base de données ouverte et collaborative OpenStreetMap (OSM) [1]. Ne sont pas inclus les bâtiments et les cours d\'eau.\\r\\n\\r\\nLa couche est disponible dans magOSM https://magosm.magellium.com/\\r\\n\\r\\n    accessible via des services WMS et WFS publics\\r\\n    visualisable, requêtable et téléchargeable via le portail\\r\\n\\r\\nModèle de données\\r\\nLes attributs OSM utilisés pour filtrer la donnée sont :\\r\\n\\r\\n    landuse=*\\r\\n    natural=*\\r\\n    wood = *\\r\\n    leisure = *\\r\\n    tourisme=*\\r\\n    aeroway=*\\r\\n\\r\\nDes attributs OSM supplémentaires ont été sélectionnés pour enrichir les tags principaux. Tous les attributs préfixés par \\"osm\\" (ex : osm_user, osm_id ...) sont des propriétés communes assimilables à des méta-données sur l\'objet OSM.\\r\\n\\r\\nPlus d\'informations sur :\\r\\n\\r\\n    le modèle de données propre aux différents usages du sol sur la page Wiki OSM - Land use and areas of natural land [2].\\r\\n    le modèle de données OSM général est documenté sur la page Wiki OSM - Eléments cartographiques [3].\\r\\n    les modes et fréquences d\'usage et de combinaison des différents attributs au sein de la communauté OSM sur le service TagInfo [4]\\r\\n\\r\\n[1] https://wiki.openstreetmap.org/wiki/FR:Page_principale [2] https://wiki.openstreetmap.org/wiki/Land_use_and_areas_of_natural_land [3] https://wiki.openstreetmap.org/wiki/FR:%C3%89l%C3%A9ments_cartographiques [4] https://taginfo.openstreetmap.org","KeywordList":["features","france_landuses_naturals_polygon"],"EX_GeographicBoundingBox":[-6.2882069888366505,37.43560720274539,14.373044545912343,53.0918187695962],"BoundingBox":[{"crs":"CRS:84","extent":[-6.2882069888366505,37.43560720274539,14.373044545912343,53.0918187695962],"res":[null,null]},{"crs":"EPSG:3857","extent":[-700000,4500000,1600000,7000000],"res":[null,null]}],"Style":[{"Name":"france_landuses_naturals","Title":"france_landuses_naturals","LegendURL":[{"Format":"image/png","OnlineResource":"https://magosm.magellium.com/geoserver/ows?service=WMS&request=GetLegendGraphic&format=image%2Fpng&width=20&height=20&layer=magosm%3Afrance_landuses_naturals_polygon","size":[391,1080]}]},{"Name":"france_landuses_naturals","Title":"france_landuses_naturals","LegendURL":[{"Format":"image/png","OnlineResource":"https://magosm.magellium.com/geoserver/ows?service=WMS&request=GetLegendGraphic&format=image%2Fpng&width=20&height=20&layer=magosm%3Afrance_landuses_naturals_polygon&style=france_landuses_naturals","size":[391,1080]}]}],"MaxScaleDenominator":1000000,"queryable":true,"opaque":false,"noSubsets":false},{"visible":true,"Attribution":{"Title":"© Magellium","OnlineResource":"https://magosm.magellium.com/informations.html"},"Name":"magosm:france_pnr_polygon","Title":"Parcs Naturels Régionaux - France métropolitaine","Abstract":"","KeywordList":["features","france_pnr_polygon"],"EX_GeographicBoundingBox":[-6.2882069888366505,37.43560720274539,14.373044545912343,53.0918187695962],"BoundingBox":[{"crs":"CRS:84","extent":[-6.2882069888366505,37.43560720274539,14.373044545912343,53.0918187695962],"res":[null,null]},{"crs":"EPSG:3857","extent":[-700000,4500000,1600000,7000000],"res":[null,null]}],"Style":[{"Name":"france_pnr_polygon","Title":"france_pnr_polygon","LegendURL":[{"Format":"image/png","OnlineResource":"https://magosm.magellium.com/geoserver/ows?service=WMS&request=GetLegendGraphic&format=image%2Fpng&width=20&height=20&layer=magosm%3Afrance_pnr_polygon","size":[186,20]}]}],"queryable":true,"opaque":false,"noSubsets":false},{"visible":true,"Attribution":{"Title":"© Magellium","OnlineResource":"https://magosm.magellium.com/informations.html"},"Name":"magosm:france_police_point","Title":"Localisations des brigades de gendarmeries et commissariats de police - France métropolitaine","Abstract":"","KeywordList":["features","france_police_point"],"EX_GeographicBoundingBox":[-6.2882069888366505,37.43560720274539,14.373044545912343,53.0918187695962],"BoundingBox":[{"crs":"CRS:84","extent":[-6.2882069888366505,37.43560720274539,14.373044545912343,53.0918187695962],"res":[null,null]},{"crs":"EPSG:3857","extent":[-700000,4500000,1600000,7000000],"res":[null,null]}],"Style":[{"Name":"france_police_point","Title":"france_police_point","LegendURL":[{"Format":"image/png","OnlineResource":"https://magosm.magellium.com/geoserver/ows?service=WMS&request=GetLegendGraphic&format=image%2Fpng&width=20&height=20&layer=magosm%3Afrance_police_point","size":[170,80]}]}],"queryable":true,"opaque":false,"noSubsets":false},{"visible":true,"Name":"magosm:france_proposed","Title":"Localisations des projets de constructions - France métropolitaine","Abstract":"","KeywordList":["features","france_proposed"],"EX_GeographicBoundingBox":[-6.2882069888366505,37.43560720274539,14.373044545912343,53.0918187695962],"BoundingBox":[{"crs":"CRS:84","extent":[-6.2882069888366505,37.43560720274539,14.373044545912343,53.0918187695962],"res":[null,null]},{"crs":"EPSG:3857","extent":[-700000,4500000,1600000,7000000],"res":[null,null]}],"Style":[{"Name":"france_proposed","Title":"france_proposed","LegendURL":[{"Format":"image/png","OnlineResource":"https://magosm.magellium.com/geoserver/ows?service=WMS&request=GetLegendGraphic&format=image%2Fpng&width=20&height=20&layer=magosm%3Afrance_proposed","size":[235,220]}]}],"MaxScaleDenominator":70000000,"queryable":true,"opaque":false,"noSubsets":false},{"visible":true,"Attribution":{"Title":"© Magellium","OnlineResource":"https://magosm.magellium.com/informations.html"},"Name":"magosm:france_schools_point","Title":"Localisations des établissements scolaires - France métropolitaine","Abstract":"","KeywordList":["features","france_schools_point"],"EX_GeographicBoundingBox":[-6.2882069888366505,37.43560720274539,14.373044545912343,53.0918187695962],"BoundingBox":[{"crs":"CRS:84","extent":[-6.2882069888366505,37.43560720274539,14.373044545912343,53.0918187695962],"res":[null,null]},{"crs":"EPSG:3857","extent":[-700000,4500000,1600000,7000000],"res":[null,null]}],"Style":[{"Name":"france_schools_point","Title":"france_schools_point","LegendURL":[{"Format":"image/png","OnlineResource":"https://magosm.magellium.com/geoserver/ows?service=WMS&request=GetLegendGraphic&format=image%2Fpng&width=20&height=20&layer=magosm%3Afrance_schools_point","size":[342,80]}]}],"queryable":true,"opaque":false,"noSubsets":false},{"visible":true,"Attribution":{"Title":"© Magellium","OnlineResource":"https://magosm.magellium.com/informations.html"},"Name":"magosm:france_shops_point","Title":"Localisations des magasins - France métropolitaine","Abstract":"","KeywordList":["features","france_shops_point"],"EX_GeographicBoundingBox":[-6.2882069888366505,37.43560720274539,14.373044545912343,53.0918187695962],"BoundingBox":[{"crs":"CRS:84","extent":[-6.2882069888366505,37.43560720274539,14.373044545912343,53.0918187695962],"res":[null,null]},{"crs":"EPSG:3857","extent":[-700000,4500000,1600000,7000000],"res":[null,null]}],"Style":[{"Name":"france_shops_point","Title":"france_shops_point","LegendURL":[{"Format":"image/png","OnlineResource":"https://magosm.magellium.com/geoserver/ows?service=WMS&request=GetLegendGraphic&format=image%2Fpng&width=20&height=20&layer=magosm%3Afrance_shops_point","size":[246,880]}]}],"queryable":true,"opaque":false,"noSubsets":false},{"visible":true,"Attribution":{"Title":"© Magellium","OnlineResource":"https://magosm.magellium.com/informations.html"},"Name":"magosm:france_social_facility_point","Title":"Localisation des structures sociales - France métropolitaine","Abstract":"","KeywordList":["features","Localisation des structures sociales - France métropolitaine","social_amenity_point"],"EX_GeographicBoundingBox":[-6.2882069888366505,37.43560720274539,14.373044545912343,53.0918187695962],"BoundingBox":[{"crs":"CRS:84","extent":[-6.2882069888366505,37.43560720274539,14.373044545912343,53.0918187695962],"res":[null,null]},{"crs":"EPSG:3857","extent":[-700000,4500000,1600000,7000000],"res":[null,null]}],"Style":[{"Name":"france_social_facility_point_cluster","Title":"france_social_facility_point_cluster","LegendURL":[{"Format":"image/png","OnlineResource":"https://magosm.magellium.com/geoserver/ows?service=WMS&request=GetLegendGraphic&format=image%2Fpng&width=20&height=20&layer=magosm%3Afrance_social_facility_point","size":[248,200]}]}],"queryable":true,"opaque":false,"noSubsets":false},{"visible":true,"Attribution":{"Title":"© Magellium","OnlineResource":"https://magosm.magellium.com/informations.html"},"Name":"magosm:france_vineyards_grapes_polygon","Title":"Vignobles - France métropolitaine","Abstract":"","KeywordList":["france_vineyards_grapes_polygon","features"],"EX_GeographicBoundingBox":[-6.2882069888366505,37.43560720274539,14.373044545912343,53.0918187695962],"BoundingBox":[{"crs":"CRS:84","extent":[-6.2882069888366505,37.43560720274539,14.373044545912343,53.0918187695962],"res":[null,null]},{"crs":"EPSG:3857","extent":[-700000,4500000,1600000,7000000],"res":[null,null]}],"Style":[{"Name":"france_vineyards_grapes_polygon","Title":"france_vineyards_grapes_polygon","LegendURL":[{"Format":"image/png","OnlineResource":"https://magosm.magellium.com/geoserver/ows?service=WMS&request=GetLegendGraphic&format=image%2Fpng&width=20&height=20&layer=magosm%3Afrance_vineyards_grapes_polygon","size":[20,20]}]}],"MaxScaleDenominator":10000000,"queryable":true,"opaque":false,"noSubsets":false},{"visible":false,"Attribution":{"Title":"© Magellium","OnlineResource":"https://magosm.magellium.com/informations.html"},"Name":"magosm:france_bicycle_mtb_routes_line","Title":"Itinéraires cyclables - France métropolitaine","Abstract":"Extrait quotidien des itinéraires cyclables en France métropolitaine présentes dans la base de données ouverte et collaborative OpenStreetMap (OSM) [1].\\r\\n\\r\\nLa couche est disponible dans magOSM https://magosm.magellium.com/\\r\\n\\r\\n    accessible via des services WMS et WFS publics\\r\\n    visualisable, requêtable et téléchargeable via le portail\\r\\n\\r\\nModèle de données\\r\\nLes attributs OSM utilisés pour filtrer la donnée sont :\\r\\n\\r\\n    route=bicycle\\r\\n    route=mtb\\r\\n\\r\\nDes attributs OSM supplémentaires ont été sélectionnés pour enrichir les tags principaux. Tous les attributs préfixés par \\"osm\\" (ex : osm_user, osm_id ...) sont des propriétés communes assimilables à des méta-données sur l\'objet OSM.\\r\\n\\r\\nPlus d\'informations sur :\\r\\n\\r\\n    le modèle de données propre aux itinéraires cyclables tout terrain sur la page Wiki OSM - FR:Cyclisme tout terrain [2].\\r\\n    le modèle de données OSM général est documenté sur la page Wiki OSM - Eléments cartographiques [3].\\r\\n    les modes et fréquences d\'usage et de combinaison des différents attributs au sein de la communauté OSM sur le service TagInfo [4]\\r\\n\\r\\n[1] https://wiki.openstreetmap.org/wiki/FR:Page_principale \\r\\n[2] https://wiki.openstreetmap.org/wiki/FR:Cyclisme_tout_terrain \\r\\n[3] https://wiki.openstreetmap.org/wiki/FR:%C3%89l%C3%A9ments_cartographiques \\r\\n[4] https://taginfo.openstreetmap.org","KeywordList":["features","france_bicycle_mtb_routes_line","cyclotourisme","pistes cyclables","openstreetmap"],"EX_GeographicBoundingBox":[-6.2882069888366505,37.43560720274539,14.373044545912343,53.0918187695962],"BoundingBox":[{"crs":"CRS:84","extent":[-6.2882069888366505,37.43560720274539,14.373044545912343,53.0918187695962],"res":[null,null]},{"crs":"EPSG:3857","extent":[-700000,4500000,1600000,7000000],"res":[null,null]}],"MetadataURL":[{"Format":"xml","OnlineResource":"https://app.isogeo.com/api/v1/resources/9c01b3e617b44fb5a104623425626a03.xml","type":"19139"}],"Style":[{"Name":"france_bicycle_mtb_routes_line","Title":"france_bicycle_mtb_routes_line","LegendURL":[{"Format":"image/png","OnlineResource":"https://magosm.magellium.com/geoserver/ows?service=WMS&request=GetLegendGraphic&format=image%2Fpng&width=20&height=20&layer=magosm%3Afrance_bicycle_mtb_routes_line","size":[291,120]}]}],"queryable":true,"opaque":false,"noSubsets":false},{"visible":false,"Attribution":{"Title":"© Magellium","OnlineResource":"https://magosm.magellium.com/informations.html"},"Name":"magosm:france_bus_routes_line","Title":"Itinéraires de bus - France métropolitaine","Abstract":"Extrait quotidien des lignes de bus (itinéraires) en France métropolitaine présentes dans la base de données ouverte et collaborative OpenStreetMap (OSM) [1].\\r\\n\\r\\nLa couche est disponible dans magOSM https://magosm.magellium.com/\\r\\n\\r\\n    accessible via des services WMS et WFS publics\\r\\n    visualisable, requêtable et téléchargeable via le portail\\r\\n\\r\\nModèle de données\\r\\nOn s\'intéresse ici aux itinéraires définis par des éléments OSM de type \\"relation\\". Les attributs OSM utilisés pour filtrer la donnée sont :\\r\\n\\r\\n    route=bus\\r\\n\\r\\nDes attributs OSM supplémentaires ont été sélectionnés pour enrichir les tags principaux. Tous les attributs préfixés par \\"osm\\" (ex : osm_user, osm_id ...) sont des propriétés communes assimilables à des méta-données sur l\'objet OSM.\\r\\n\\r\\nPlus d\'informations sur :\\r\\n\\r\\n    le modèle de données propre aux itinéraires de bus sur la page Wiki OSM - Tag:route=bus [2].\\r\\n    le modèle de données OSM général est documenté sur la page Wiki OSM - Eléments cartographiques [3].\\r\\n    les modes et fréquences d\'usage et de combinaison des différents attributs au sein de la communauté OSM sur le service TagInfo [4]\\r\\n\\r\\n[1] https://wiki.openstreetmap.org/wiki/FR:Page_principale \\r\\n[2] https://wiki.openstreetmap.org/wiki/Tag:route%3Dbus \\r\\n[3] https://wiki.openstreetmap.org/wiki/FR:%C3%89l%C3%A9ments_cartographiques \\r\\n[4] https://taginfo.openstreetmap.org","KeywordList":["features","france_bus_routes_line"],"EX_GeographicBoundingBox":[-6.2882069888366505,37.43560720274539,14.373044545912343,53.0918187695962],"BoundingBox":[{"crs":"CRS:84","extent":[-6.2882069888366505,37.43560720274539,14.373044545912343,53.0918187695962],"res":[null,null]},{"crs":"EPSG:3857","extent":[-700000,4500000,1600000,7000000],"res":[null,null]}],"Style":[{"Name":"france_bus_routes_line","Title":"france_bus_routes_line","LegendURL":[{"Format":"image/png","OnlineResource":"https://magosm.magellium.com/geoserver/ows?service=WMS&request=GetLegendGraphic&format=image%2Fpng&width=20&height=20&layer=magosm%3Afrance_bus_routes_line","size":[105,20]}]},{"Name":"france_bus_routes_line","Title":"france_bus_routes_line","LegendURL":[{"Format":"image/png","OnlineResource":"https://magosm.magellium.com/geoserver/ows?service=WMS&request=GetLegendGraphic&format=image%2Fpng&width=20&height=20&layer=magosm%3Afrance_bus_routes_line&style=france_bus_routes_line","size":[105,20]}]},{"Name":"france_bus_routes_line_old","Title":"france_bus_routes_line_old","LegendURL":[{"Format":"image/png","OnlineResource":"https://magosm.magellium.com/geoserver/ows?service=WMS&request=GetLegendGraphic&format=image%2Fpng&width=20&height=20&layer=magosm%3Afrance_bus_routes_line&style=france_bus_routes_line_old","size":[48,80]}]}],"MaxScaleDenominator":100000000,"queryable":true,"opaque":false,"noSubsets":false},{"visible":false,"Attribution":{"Title":"© Magellium","OnlineResource":"https://magosm.magellium.com/informations.html"},"Name":"magosm:france_cycleways_line","Title":"Réseau cyclable - France métropolitaine","Abstract":"Extrait quotidien du réseau cyclable (infrastructures) en France métropolitaine présent dans la base de données ouverte et collaborative OpenStreetMap (OSM) [1].\\r\\n\\r\\nLa couche est disponible dans magOSM https://magosm.magellium.com/\\r\\n\\r\\n    accessible via des services WMS et WFS publics\\r\\n    visualisable, requêtable et téléchargeable via le portail\\r\\n\\r\\nModèle de données\\r\\n\\r\\nLes attributs OSM utilisés pour filtrer la donnée sont : highway=\'cycleway\' OR bicycle=\'designated\' OR (tags ? \'cycleway\' AND tags->\'cycleway\' != \'no\') OR (tags ? \'cycleway:left\' AND tags->\'cycleway:left\' != \'no\') OR (tags ? \'cycleway:right\' AND tags->\'cycleway:right\' != \'no\') OR (tags ? \'cycleway:both\' AND tags->\'cycleway:both\' != \'no\');\\r\\n\\r\\n    highway=cycleway\\r\\n    bicycle=designated\\r\\n    cycleway=* sauf \'no\'\\r\\n    cycleway:left=* sauf \'no\'\\r\\n    cycleway:right=* sauf \'no\'\\r\\n    cycleway:both=* sauf \'no\'\\r\\n\\r\\nDes attributs OSM supplémentaires ont été sélectionnés pour enrichir les tags principaux. Tous les attributs préfixés par \\"osm\\" (ex : osm_user, osm_id ...) sont des propriétés communes assimilables à des méta-données sur l\'objet OSM.\\r\\n\\r\\nPlus d\'informations sur :\\r\\n\\r\\n    le modèle de données propre au réseau cyclable sur la page Wiki OSM - FR:Bicycle [2].\\r\\n    le modèle de données OSM général est documenté sur la page Wiki OSM - Eléments cartographiques [3].\\r\\n    les modes et fréquences d\'usage et de combinaison des différents attributs au sein de la communauté OSM sur le service TagInfo [4]\\r\\n\\r\\n[1] https://wiki.openstreetmap.org/wiki/FR:Page_principale [2] https://wiki.openstreetmap.org/wiki/FR:Bicycle [3] https://wiki.openstreetmap.org/wiki/FR:%C3%89l%C3%A9ments_cartographiques [4] https://taginfo.openstreetmap.org","KeywordList":["features","france_cycleways_line"],"EX_GeographicBoundingBox":[-6.2882069888366505,37.43560720274539,14.373044545912343,53.0918187695962],"BoundingBox":[{"crs":"CRS:84","extent":[-6.2882069888366505,37.43560720274539,14.373044545912343,53.0918187695962],"res":[null,null]},{"crs":"EPSG:3857","extent":[-700000,4500000,1600000,7000000],"res":[null,null]}],"Style":[{"Name":"france_cycleways_line","Title":"france_cycleways_line","LegendURL":[{"Format":"image/png","OnlineResource":"https://magosm.magellium.com/geoserver/ows?service=WMS&request=GetLegendGraphic&format=image%2Fpng&width=20&height=20&layer=magosm%3Afrance_cycleways_line","size":[119,40]}]}],"MaxScaleDenominator":300000,"queryable":true,"opaque":false,"noSubsets":false},{"visible":false,"Attribution":{"Title":"© Magellium","OnlineResource":"https://magosm.magellium.com/informations.html"},"Name":"magosm:france_highways_line","Title":"Réseau routier - France métropolitaine","Abstract":"Extrait quotidien du réseau routier en France métropolitaine présentes dans la base de données ouverte et collaborative OpenStreetMap (OSM) [1].\\r\\n\\r\\nLa couche est disponible dans magOSM https://magosm.magellium.com/\\r\\n\\r\\n    accessible via des services WMS et WFS publics\\r\\n    visualisable, requêtable et téléchargeable via le portail\\r\\n\\r\\nModèle de données\\r\\nLes attributs OSM utilisés pour filtrer la donnée sont :\\r\\n\\r\\n    highway = motorway\\r\\n    highway = trunk\\r\\n    highway = primary\\r\\n    highway = secondary\\r\\n    highway = tertiary\\r\\n    highway = motorway_link / trunk_link / primary_link / secondary_link / tertiary_link / motorway_link\\r\\n    highway = unclassified\\r\\n    highway = residential\\r\\n    highway = service\\r\\n    highway = pedestrian\\r\\n    highway = living_street\\r\\n    highway = track\\r\\n\\r\\nDes attributs OSM supplémentaires ont été sélectionnés pour enrichir les tags principaux. Tous les attributs préfixés par \\"osm\\" (ex : osm_user, osm_id ...) sont des propriétés communes assimilables à des méta-données sur l\'objet OSM.\\r\\n\\r\\nPlus d\'informations sur :\\r\\n\\r\\n    le modèle de données propre aux autoroutes sur la page Wiki OSM - FR:France roads tagging [2].\\r\\n    le modèle de données OSM général est documenté sur la page Wiki OSM - Eléments cartographiques [3].\\r\\n    les modes et fréquences d\'usage et de combinaison des différents attributs au sein de la communauté OSM sur le service TagInfo [4]\\r\\n\\r\\n[1] https://wiki.openstreetmap.org/wiki/FR:Page_principale [2] https://wiki.openstreetmap.org/wiki/FR:France_roads_tagging [3] https://wiki.openstreetmap.org/wiki/FR:%C3%89l%C3%A9ments_cartographiques [4] https://taginfo.openstreetmap.org","KeywordList":["features","france_highways_line"],"EX_GeographicBoundingBox":[-6.2882069888366505,37.43560720274539,14.373044545912343,53.0918187695962],"BoundingBox":[{"crs":"CRS:84","extent":[-6.2882069888366505,37.43560720274539,14.373044545912343,53.0918187695962],"res":[null,null]},{"crs":"EPSG:3857","extent":[-700000,4500000,1600000,7000000],"res":[null,null]}],"Style":[{"Name":"france_highways_line","Title":"france_highways_line","LegendURL":[{"Format":"image/png","OnlineResource":"https://magosm.magellium.com/geoserver/ows?service=WMS&request=GetLegendGraphic&format=image%2Fpng&width=20&height=20&layer=magosm%3Afrance_highways_line","size":[260,588]}]}],"queryable":true,"opaque":false,"noSubsets":false},{"visible":false,"Name":"magosm:france_highways_line_recently_modified","Title":"Modifications Récentes du Réseau Routier","Abstract":"","KeywordList":["features","france_highways_line_recently_modified"],"EX_GeographicBoundingBox":[-6.2882069888366505,37.43560720274539,14.373044545912343,53.0918187695962],"BoundingBox":[{"crs":"CRS:84","extent":[-6.2882069888366505,37.43560720274539,14.373044545912343,53.0918187695962],"res":[null,null]},{"crs":"EPSG:3857","extent":[-700000,4500000,1600000,7000000],"res":[null,null]}],"Style":[{"Name":"france_highways_line","Title":"france_highways_line","LegendURL":[{"Format":"image/png","OnlineResource":"https://magosm.magellium.com/geoserver/ows?service=WMS&request=GetLegendGraphic&format=image%2Fpng&width=20&height=20&layer=magosm%3Afrance_highways_line_recently_modified","size":[260,588]}]}],"queryable":true,"opaque":false,"noSubsets":false},{"visible":false,"Attribution":{"Title":"© Magellium","OnlineResource":"https://magosm.magellium.com/informations.html"},"Name":"magosm:france_hiking_foot_routes_line","Title":"Itinéraires de randonnée - France métropolitaine","Abstract":"","KeywordList":["features","france_hiking_foot_routes_line"],"EX_GeographicBoundingBox":[-6.2882069888366505,37.43560720274539,14.373044545912343,53.0918187695962],"BoundingBox":[{"crs":"CRS:84","extent":[-6.2882069888366505,37.43560720274539,14.373044545912343,53.0918187695962],"res":[null,null]},{"crs":"EPSG:3857","extent":[-700000,4500000,1600000,7000000],"res":[null,null]}],"Style":[{"Name":"france_hiking_foot_routes_line","Title":"france_hiking_foot_routes_line","LegendURL":[{"Format":"image/png","OnlineResource":"https://magosm.magellium.com/geoserver/ows?service=WMS&request=GetLegendGraphic&format=image%2Fpng&width=20&height=20&layer=magosm%3Afrance_hiking_foot_routes_line","size":[330,80]}]}],"queryable":true,"opaque":false,"noSubsets":false},{"visible":false,"Attribution":{"Title":"© Magellium","OnlineResource":"https://magosm.magellium.com/informations.html"},"Name":"magosm:france_motorways_line","Title":"Autoroutes - France métropolitaine","Abstract":"Extrait quotidien des autoroutes (infrastructures) en France métropolitaine présentes dans la base de données ouverte et collaborative OpenStreetMap (OSM) [1].\\r\\n\\r\\nLa couche est disponible dans magOSM https://magosm.magellium.com/\\r\\n\\r\\n    accessible via des services WMS et WFS publics\\r\\n    visualisable, requêtable et téléchargeable via le portail\\r\\n\\r\\nModèle de données\\r\\nLes attributs OSM utilisés pour filtrer la donnée sont :\\r\\n\\r\\n    highway=motorway\\r\\n    highway=motorway_link\\r\\n    highway=motorway_junction\\r\\n\\r\\nDes attributs OSM supplémentaires ont été sélectionnés pour enrichir les tags principaux. Tous les attributs préfixés par \\"osm\\" (ex : osm_user, osm_id ...) sont des propriétés communes assimilables à des méta-données sur l\'objet OSM.\\r\\n\\r\\nPlus d\'informations sur :\\r\\n\\r\\n    le modèle de données propre aux autoroutes sur la page Wiki OSM - WikiProject_France/Autoroutes [2].\\r\\n    le modèle de données OSM général est documenté sur la page Wiki OSM - Eléments cartographiques [3].\\r\\n    les modes et fréquences d\'usage et de combinaison des différents attributs au sein de la communauté OSM sur le service TagInfo [4]\\r\\n\\r\\n[1] https://wiki.openstreetmap.org/wiki/FR:Page_principale [2] https://wiki.openstreetmap.org/wiki/WikiProject_France/Autoroutes [3] https://wiki.openstreetmap.org/wiki/FR:%C3%89l%C3%A9ments_cartographiques [4] https://taginfo.openstreetmap.org","KeywordList":["features","france_motorways_line"],"EX_GeographicBoundingBox":[-6.2882069888366505,37.43560720274539,14.373044545912343,53.0918187695962],"BoundingBox":[{"crs":"CRS:84","extent":[-6.2882069888366505,37.43560720274539,14.373044545912343,53.0918187695962],"res":[null,null]},{"crs":"EPSG:3857","extent":[-700000,4500000,1600000,7000000],"res":[null,null]}],"Style":[{"Name":"france_motorways_line","Title":"france_motorways_line","LegendURL":[{"Format":"image/png","OnlineResource":"https://magosm.magellium.com/geoserver/ows?service=WMS&request=GetLegendGraphic&format=image%2Fpng&width=20&height=20&layer=magosm%3Afrance_motorways_line","size":[162,20]}]}],"queryable":true,"opaque":false,"noSubsets":false},{"visible":false,"Attribution":{"Title":"© Magellium","OnlineResource":"https://magosm.magellium.com/informations.html"},"Name":"magosm:france_railways_line","Title":"Voies ferrées - France métropolitaine","Abstract":"","KeywordList":["features","france_railways_line"],"EX_GeographicBoundingBox":[-6.2882069888366505,37.43560720274539,14.373044545912343,53.0918187695962],"BoundingBox":[{"crs":"CRS:84","extent":[-6.2882069888366505,37.43560720274539,14.373044545912343,53.0918187695962],"res":[null,null]},{"crs":"EPSG:3857","extent":[-700000,4500000,1600000,7000000],"res":[null,null]}],"Style":[{"Name":"france_railways_line","Title":"france_railways_line","LegendURL":[{"Format":"image/png","OnlineResource":"https://magosm.magellium.com/geoserver/ows?service=WMS&request=GetLegendGraphic&format=image%2Fpng&width=20&height=20&layer=magosm%3Afrance_railways_line","size":[108,140]}]},{"Name":"france_railway_line_test","Title":"france_railway_line_test","LegendURL":[{"Format":"image/png","OnlineResource":"https://magosm.magellium.com/geoserver/ows?service=WMS&request=GetLegendGraphic&format=image%2Fpng&width=20&height=20&layer=magosm%3Afrance_railways_line&style=france_railway_line_test","size":[150,60]}]}],"MaxScaleDenominator":100000000,"queryable":true,"opaque":false,"noSubsets":false},{"visible":false,"Attribution":{"Title":"© Magellium","OnlineResource":"https://magosm.magellium.com/informations.html"},"Name":"magosm:france_subway_routes_line","Title":"Itinéraires de métro - France métropolitaine","Abstract":"Extrait quotidien des lignes de métro (itinéraires) en France métropolitaine présentes dans la base de données ouverte et collaborative OpenStreetMap (OSM) [1].\\r\\n\\r\\nLa couche est disponible dans magOSM https://magosm.magellium.com/\\r\\n\\r\\n    accessible via des services WMS et WFS publics\\r\\n    visualisable, requêtable et téléchargeable via le portail\\r\\n\\r\\nModèle de données\\r\\nLes attributs OSM utilisés pour filtrer la donnée sont :\\r\\n\\r\\n    route=subway\\r\\n\\r\\nDes attributs OSM supplémentaires ont été sélectionnés pour enrichir les tags principaux. Tous les attributs préfixés par \\"osm\\" (ex : osm_user, osm_id ...) sont des propriétés communes assimilables à des méta-données sur l\'objet OSM.\\r\\n\\r\\nPlus d\'informations sur :\\r\\n\\r\\n    le modèle de données propre aux itinéraires de métro sur les pages Wiki OSM - Tag:route=subway [2].\\r\\n    le modèle de données OSM général est documenté sur la page Wiki OSM - Eléments cartographiques [3].\\r\\n    les modes et fréquences d\'usage et de combinaison des différents attributs au sein de la communauté OSM sur le service TagInfo [4]\\r\\n\\r\\n[1] https://wiki.openstreetmap.org/wiki/FR:Page_principale [2] https://wiki.openstreetmap.org/wiki/Tag:route%3Dsubway [3] https://wiki.openstreetmap.org/wiki/FR:%C3%89l%C3%A9ments_cartographiques [4] https://taginfo.openstreetmap.org","KeywordList":["features","france_subway_routes_line"],"EX_GeographicBoundingBox":[-6.2882069888366505,37.43560720274539,14.373044545912343,53.0918187695962],"BoundingBox":[{"crs":"CRS:84","extent":[-6.2882069888366505,37.43560720274539,14.373044545912343,53.0918187695962],"res":[null,null]},{"crs":"EPSG:3857","extent":[-700000,4500000,1600000,7000000],"res":[null,null]}],"Style":[{"Name":"france_subway_routes_line","Title":"france_subway_routes_line","LegendURL":[{"Format":"image/png","OnlineResource":"https://magosm.magellium.com/geoserver/ows?service=WMS&request=GetLegendGraphic&format=image%2Fpng&width=20&height=20&layer=magosm%3Afrance_subway_routes_line","size":[119,20]}]},{"Name":"line","Title":"A boring default style","Abstract":"A sample style that just prints out a green line","LegendURL":[{"Format":"image/png","OnlineResource":"https://magosm.magellium.com/geoserver/ows?service=WMS&request=GetLegendGraphic&format=image%2Fpng&width=20&height=20&layer=magosm%3Afrance_subway_routes_line&style=line","size":[20,20]}]}],"queryable":true,"opaque":false,"noSubsets":false},{"visible":false,"Attribution":{"Title":"© Magellium","OnlineResource":"https://magosm.magellium.com/informations.html"},"Name":"magosm:france_train_routes_line","Title":"Itinéraires de train - France métropolitaine","Abstract":"Extrait quotidien des itinéraires de train en France métropolitaine présents dans la base de données ouverte et collaborative OpenStreetMap (OSM) [1].\\r\\n\\r\\nLa couche est disponible dans magOSM https://magosm.magellium.com/\\r\\n\\r\\n    accessible via des services WMS et WFS publics\\r\\n    visualisable, requêtable et téléchargeable via le portail\\r\\n\\r\\nModèle de données\\r\\nLes attributs OSM utilisés pour filtrer la donnée sont :\\r\\n\\r\\n    route=train\\r\\n\\r\\nDes attributs OSM supplémentaires ont été sélectionnés pour enrichir les tags principaux. Tous les attributs préfixés par \\"osm\\" (ex : osm_user, osm_id ...) sont des propriétés communes assimilables à des méta-données sur l\'objet OSM.\\r\\n\\r\\nPlus d\'informations sur :\\r\\n\\r\\n    le modèle de données propre aux itinéraires de train en France sur la page Wiki OSM - France/Voies ferrées [2].\\r\\n    le modèle de données OSM général est documenté sur la page Wiki OSM - Eléments cartographiques [3].\\r\\n    les modes et fréquences d\'usage et de combinaison des différents attributs au sein de la communauté OSM sur le service TagInfo [4]\\r\\n\\r\\n[1] https://wiki.openstreetmap.org/wiki/FR:Page_principale \\r\\n[2] https://wiki.openstreetmap.org/wiki/France/Voies_ferr%C3%A9es\\r\\n[3] https://wiki.openstreetmap.org/wiki/FR:%C3%89l%C3%A9ments_cartographiques \\r\\n[4] https://taginfo.openstreetmap.org","KeywordList":["features","france_train_routes_line"],"EX_GeographicBoundingBox":[-6.2882069888366505,37.43560720274539,14.373044545912343,53.0918187695962],"BoundingBox":[{"crs":"CRS:84","extent":[-6.2882069888366505,37.43560720274539,14.373044545912343,53.0918187695962],"res":[null,null]},{"crs":"EPSG:3857","extent":[-700000,4500000,1600000,7000000],"res":[null,null]}],"DataURL":[{"Format":"text/plain","OnlineResource":"https://www.data.gouv.fr/fr/datasets/itineraires-de-train-france-metropolitaine/"}],"Style":[{"Name":"france_train_routes_line","Title":"france_train_routes_line","LegendURL":[{"Format":"image/png","OnlineResource":"https://magosm.magellium.com/geoserver/ows?service=WMS&request=GetLegendGraphic&format=image%2Fpng&width=20&height=20&layer=magosm%3Afrance_train_routes_line","size":[190,120]}]}],"queryable":true,"opaque":false,"noSubsets":false},{"visible":false,"Attribution":{"Title":"© Magellium","OnlineResource":"https://magosm.magellium.com/informations.html"},"Name":"magosm:france_tram_ltr_routes_line","Title":"Itinéraires de tramways - France métropolitaine","Abstract":"Extrait quotidien des itinéraires de tramways en France métropolitaine présents dans la base de données ouverte et collaborative OpenStreetMap (OSM) [1].\\r\\n\\r\\nLa couche est disponible dans magOSM https://magosm.magellium.com/\\r\\n\\r\\n    accessible via des services WMS et WFS publics\\r\\n    visualisable, requêtable et téléchargeable via le portail\\r\\n\\r\\nModèle de données\\r\\nLes attributs OSM utilisés pour filtrer la donnée sont :\\r\\n\\r\\n    route=light_rail\\r\\n    route=tram\\r\\n\\r\\nDes attributs OSM supplémentaires ont été sélectionnés pour enrichir les tags principaux. Tous les attributs préfixés par \\"osm\\" (ex : osm_user, osm_id ...) sont des propriétés communes assimilables à des méta-données sur l\'objet OSM.\\r\\n\\r\\nPlus d\'informations sur :\\r\\n\\r\\n    le modèle de données propre aux itinéraires de métro sur les pages Wiki OSM - Tag:route=tram [2].\\r\\n    le modèle de données OSM général est documenté sur la page Wiki OSM - Eléments cartographiques [3].\\r\\n    les modes et fréquences d\'usage et de combinaison des différents attributs au sein de la communauté OSM sur le service TagInfo [4]\\r\\n\\r\\n[1] https://wiki.openstreetmap.org/wiki/FR:Page_principale [2] https://wiki.openstreetmap.org/wiki/Tag:route%3Dtram [3] https://wiki.openstreetmap.org/wiki/FR:%C3%89l%C3%A9ments_cartographiques [4] https://taginfo.openstreetmap.org","KeywordList":["features","france_tram_ltr_routes_line"],"EX_GeographicBoundingBox":[-6.2882069888366505,37.43560720274539,14.373044545912343,53.0918187695962],"BoundingBox":[{"crs":"CRS:84","extent":[-6.2882069888366505,37.43560720274539,14.373044545912343,53.0918187695962],"res":[null,null]},{"crs":"EPSG:3857","extent":[-700000,4500000,1600000,7000000],"res":[null,null]}],"Style":[{"Name":"france_tram_ltr_routes_line","Title":"france_tram_ltr_routes_line","LegendURL":[{"Format":"image/png","OnlineResource":"https://magosm.magellium.com/geoserver/ows?service=WMS&request=GetLegendGraphic&format=image%2Fpng&width=20&height=20&layer=magosm%3Afrance_tram_ltr_routes_line","size":[111,20]}]}],"MaxScaleDenominator":1000000,"queryable":true,"opaque":false,"noSubsets":false},{"visible":false,"Attribution":{"Title":"© Magellium","OnlineResource":"https://magosm.magellium.com/informations.html"},"Name":"magosm:france_clinics_point","Title":"Localisations des cliniques - France métropolitaine","Abstract":"Extrait quotidien des cliniques en France métropolitaine présentes dans la base de données ouverte et collaborative OpenStreetMap (OSM) [1].\\r\\n\\r\\nLa couche est disponible dans magOSM https://magosm.magellium.com/\\r\\n\\r\\n    accessible via des services WMS et WFS publics\\r\\n    visualisable, requêtable et téléchargeable via le portail\\r\\n\\r\\nModèle de données\\r\\nLes attributs OSM utilisés pour filtrer la donnée sont :\\r\\n\\r\\n    amenity=clinic\\r\\n\\r\\nDes attributs OSM supplémentaires ont été sélectionnés pour enrichir les tags principaux. Tous les attributs préfixés par \\"osm\\" (ex : osm_user, osm_id ...) sont des propriétés communes assimilables à des méta-données sur l\'objet OSM.\\r\\n\\r\\nPlus d\'informations sur :\\r\\n\\r\\n    le modèle de données propre aux cliniques sur la page Wiki OSM - FR:Tag:amenity=clinic [2].\\r\\n    le modèle de données OSM général est documenté sur la page Wiki OSM - Eléments cartographiques [3].\\r\\n    les modes et fréquences d\'usage et de combinaison des différents attributs au sein de la communauté OSM sur le service TagInfo [4]\\r\\n\\r\\n[1] https://wiki.openstreetmap.org/wiki/FR:Page_principale \\r\\n[2] https://wiki.openstreetmap.org/wiki/FR:Tag:amenity%3Dclinic \\r\\n[3] https://wiki.openstreetmap.org/wiki/FR:%C3%89l%C3%A9ments_cartographiques \\r\\n[4] https://taginfo.openstreetmap.org","KeywordList":["features","france_clinics_point"],"EX_GeographicBoundingBox":[-6.2882069888366505,37.43560720274539,14.373044545912343,53.0918187695962],"BoundingBox":[{"crs":"CRS:84","extent":[-6.2882069888366505,37.43560720274539,14.373044545912343,53.0918187695962],"res":[null,null]},{"crs":"EPSG:3857","extent":[-700000,4500000,1600000,7000000],"res":[null,null]}],"Style":[{"Name":"france_clinics_point","Title":"france_clinics_point","LegendURL":[{"Format":"image/png","OnlineResource":"https://magosm.magellium.com/geoserver/ows?service=WMS&request=GetLegendGraphic&format=image%2Fpng&width=20&height=20&layer=magosm%3Afrance_clinics_point","size":[73,100]}]}],"MaxScaleDenominator":70000000,"queryable":true,"opaque":false,"noSubsets":false},{"visible":false,"Attribution":{"Title":"© Magellium","OnlineResource":"https://magosm.magellium.com/informations.html"},"Name":"magosm:france_hospitals_point","Title":"Localisations des hôpitaux - France métropolitaine","Abstract":"","KeywordList":["features","france_hospitals_point"],"EX_GeographicBoundingBox":[-6.2882069888366505,37.43560720274539,14.373044545912343,53.0918187695962],"BoundingBox":[{"crs":"CRS:84","extent":[-6.2882069888366505,37.43560720274539,14.373044545912343,53.0918187695962],"res":[null,null]},{"crs":"EPSG:3857","extent":[-700000,4500000,1600000,7000000],"res":[null,null]}],"Style":[{"Name":"france_hospitals_point","Title":"france_hospitals_point","LegendURL":[{"Format":"image/png","OnlineResource":"https://magosm.magellium.com/geoserver/ows?service=WMS&request=GetLegendGraphic&format=image%2Fpng&width=20&height=20&layer=magosm%3Afrance_hospitals_point","size":[68,100]}]}],"MaxScaleDenominator":70000000,"queryable":true,"opaque":false,"noSubsets":false},{"visible":false,"Attribution":{"Title":"© Magellium","OnlineResource":"https://magosm.magellium.com/informations.html"},"Name":"magosm:france_pharmacies_point","Title":"Localisations des pharmacies - France métropolitaine","Abstract":"","KeywordList":["features","france_pharmacies_point"],"EX_GeographicBoundingBox":[-6.2882069888366505,37.43560720274539,14.373044545912343,53.0918187695962],"BoundingBox":[{"crs":"CRS:84","extent":[-6.2882069888366505,37.43560720274539,14.373044545912343,53.0918187695962],"res":[null,null]},{"crs":"EPSG:3857","extent":[-700000,4500000,1600000,7000000],"res":[null,null]}],"Style":[{"Name":"france_pharmacies_point","Title":"france_pharmacies_point","LegendURL":[{"Format":"image/png","OnlineResource":"https://magosm.magellium.com/geoserver/ows?service=WMS&request=GetLegendGraphic&format=image%2Fpng&width=20&height=20&layer=magosm%3Afrance_pharmacies_point","size":[91,100]}]}],"MaxScaleDenominator":70000000,"queryable":true,"opaque":false,"noSubsets":false},{"visible":false,"Attribution":{"Title":"© Magellium","OnlineResource":"https://magosm.magellium.com/informations.html"},"Name":"magosm:france_communes_polygon","Title":"Emprises des communes - France métropolitaine","Abstract":"Extrait quotidien des communes en France métropolitaine présentes dans la base de données ouverte et collaborative OpenStreetMap (OSM) [1].\\r\\n\\r\\nModèle de données Les attributs OSM utilisés pour filtrer la donnée sont :\\r\\n\\r\\n    boundary =\'administrative\'\\r\\n    admin_level=\'8\'\\r\\n    \'ref:INSEE\' is not null\\r\\n\\r\\nDes attributs OSM supplémentaires ont été sélectionnés pour enrichir les tags principaux. Tous les attributs préfixés par \\"osm\\" (ex : osm_user, osm_id ...) sont des propriétés communes assimilables à des méta-données sur l\'objet OSM.\\r\\n\\r\\nPlus d\'informations sur :\\r\\n\\r\\n    le modèle de données propre aux limites administratives sur la page Wiki OSM - FR:Tag:boundary=administrative [2].\\r\\n    le modèle de données OSM général est documenté sur la page Wiki OSM - Eléments cartographiques [3].\\r\\n    les modes et fréquences d\'usage et de combinaison des différents attributs au sein de la communauté OSM sur le service TagInfo [4]\\r\\n\\r\\n[1] https://wiki.openstreetmap.org/wiki/FR:Page_principale [2] https://wiki.openstreetmap.org/wiki/FR:Key:boundary=administrative [3] https://wiki.openstreetmap.org/wiki/FR:%C3%89l%C3%A9ments_cartographiques [4] https://taginfo.openstreetmap.org","KeywordList":["features","communes_polygon"],"EX_GeographicBoundingBox":[-6.2882069888366505,37.43560720274539,14.373044545912343,53.0918187695962],"BoundingBox":[{"crs":"CRS:84","extent":[-6.2882069888366505,37.43560720274539,14.373044545912343,53.0918187695962],"res":[null,null]},{"crs":"EPSG:3857","extent":[-700000,4500000,1600000,7000000],"res":[null,null]}],"Style":[{"Name":"polygon","Title":"A boring default style","Abstract":"A sample style that just prints out a transparent red interior with a red outline","LegendURL":[{"Format":"image/png","OnlineResource":"https://magosm.magellium.com/geoserver/ows?service=WMS&request=GetLegendGraphic&format=image%2Fpng&width=20&height=20&layer=magosm%3Afrance_communes_polygon","size":[20,20]}]}],"queryable":true,"opaque":false,"noSubsets":false},{"visible":false,"Attribution":{"Title":"© Magellium","OnlineResource":"https://magosm.magellium.com/informations.html"},"Name":"magosm:france_departements_polygon","Title":"Emprises des départements - France métropolitaine","Abstract":"Extrait quotidien des départements en France métropolitaine présentes dans la base de données ouverte et collaborative OpenStreetMap (OSM) [1].\\r\\n\\r\\nModèle de données Les attributs OSM utilisés pour filtrer la donnée sont :\\r\\n\\r\\n    boundary =\'administrative\'\\r\\n    admin_level=\'6\'\\r\\n    \'ref:INSEE\' is not null\\r\\n\\r\\nDes attributs OSM supplémentaires ont été sélectionnés pour enrichir les tags principaux. Tous les attributs préfixés par \\"osm\\" (ex : osm_user, osm_id ...) sont des propriétés communes assimilables à des méta-données sur l\'objet OSM.\\r\\n\\r\\nPlus d\'informations sur :\\r\\n\\r\\n    le modèle de données propre aux limites administratives sur la page Wiki OSM - FR:Tag:boundary=administrative [2].\\r\\n    le modèle de données OSM général est documenté sur la page Wiki OSM - Eléments cartographiques [3].\\r\\n    les modes et fréquences d\'usage et de combinaison des différents attributs au sein de la communauté OSM sur le service TagInfo [4]\\r\\n\\r\\n[1] https://wiki.openstreetmap.org/wiki/FR:Page_principale [2] https://wiki.openstreetmap.org/wiki/FR:Key:boundary=administrative [3] https://wiki.openstreetmap.org/wiki/FR:%C3%89l%C3%A9ments_cartographiques [4] https://taginfo.openstreetmap.org","KeywordList":["features","france_departements_polygon"],"EX_GeographicBoundingBox":[-6.2882069888366505,37.43560720274539,14.373044545912343,53.0918187695962],"BoundingBox":[{"crs":"CRS:84","extent":[-6.2882069888366505,37.43560720274539,14.373044545912343,53.0918187695962],"res":[null,null]},{"crs":"EPSG:3857","extent":[-700000,4500000,1600000,7000000],"res":[null,null]}],"Style":[{"Name":"france_departements_polygon","Title":"france_departements_polygon","LegendURL":[{"Format":"image/png","OnlineResource":"https://magosm.magellium.com/geoserver/ows?service=WMS&request=GetLegendGraphic&format=image%2Fpng&width=20&height=20&layer=magosm%3Afrance_departements_polygon","size":[150,40]}]}],"queryable":true,"opaque":false,"noSubsets":false},{"visible":false,"Name":"magosm:france_epcis_polygon","Title":"Emprises des EPCI - France métropolitaine","Abstract":"Extrait quotidien des EPCI en France métropolitaine présentes dans la base de données ouverte et collaborative OpenStreetMap (OSM) [1].\\r\\n\\r\\nModèle de données Les attributs OSM utilisés pour filtrer la donnée sont :\\r\\n\\r\\n    boundary =\'local_authority\'\\r\\n    \'ref:fr:SIREN\' is not null\\r\\n\\r\\nDes attributs OSM supplémentaires ont été sélectionnés pour enrichir les tags principaux. Tous les attributs préfixés par \\"osm\\" (ex : osm_user, osm_id ...) sont des propriétés communes assimilables à des méta-données sur l\'objet OSM.\\r\\n\\r\\nPlus d\'informations sur :\\r\\n\\r\\n    le modèle de données propre aux limites administratives sur la page Wiki OSM - FR:Tag:boundary=administrative [2].\\r\\n    le modèle de données OSM général est documenté sur la page Wiki OSM - Eléments cartographiques [3].\\r\\n    les modes et fréquences d\'usage et de combinaison des différents attributs au sein de la communauté OSM sur le service TagInfo [4]\\r\\n\\r\\n[1] https://wiki.openstreetmap.org/wiki/FR:Page_principale [2] https://wiki.openstreetmap.org/wiki/FR:Key:boundary=administrative [3] https://wiki.openstreetmap.org/wiki/FR:%C3%89l%C3%A9ments_cartographiques [4] https://taginfo.openstreetmap.org","KeywordList":["features","france_epcis_polygon"],"EX_GeographicBoundingBox":[-6.2882069888366505,37.43560720274539,14.373044545912343,53.0918187695962],"BoundingBox":[{"crs":"CRS:84","extent":[-6.2882069888366505,37.43560720274539,14.373044545912343,53.0918187695962],"res":[null,null]},{"crs":"EPSG:3857","extent":[-700000,4500000,1600000,7000000],"res":[null,null]}],"Style":[{"Name":"polygon","Title":"A boring default style","Abstract":"A sample style that just prints out a transparent red interior with a red outline","LegendURL":[{"Format":"image/png","OnlineResource":"https://magosm.magellium.com/geoserver/ows?service=WMS&request=GetLegendGraphic&format=image%2Fpng&width=20&height=20&layer=magosm%3Afrance_epcis_polygon","size":[20,20]}]}],"queryable":true,"opaque":false,"noSubsets":false},{"visible":false,"Name":"magosm:france_regions_polygon","Title":"Emprises des régions - France métropolitaine","Abstract":"Extrait quotidien des régions en France métropolitaine présentes dans la base de données ouverte et collaborative OpenStreetMap (OSM) [1].\\r\\n\\r\\nModèle de données Les attributs OSM utilisés pour filtrer la donnée sont :\\r\\n\\r\\n    boundary =\'administrative\'\\r\\n    admin_level=\'4\'\\r\\n    \'ref:INSEE\' is not null\\r\\n\\r\\nDes attributs OSM supplémentaires ont été sélectionnés pour enrichir les tags principaux. Tous les attributs préfixés par \\"osm\\" (ex : osm_user, osm_id ...) sont des propriétés communes assimilables à des méta-données sur l\'objet OSM.\\r\\n\\r\\nPlus d\'informations sur :\\r\\n\\r\\n    le modèle de données propre aux limites administratives sur la page Wiki OSM - FR:Tag:boundary=administrative [2].\\r\\n    le modèle de données OSM général est documenté sur la page Wiki OSM - Eléments cartographiques [3].\\r\\n    les modes et fréquences d\'usage et de combinaison des différents attributs au sein de la communauté OSM sur le service TagInfo [4]\\r\\n\\r\\n[1] https://wiki.openstreetmap.org/wiki/FR:Page_principale [2] https://wiki.openstreetmap.org/wiki/FR:Key:boundary=administrative [3] https://wiki.openstreetmap.org/wiki/FR:%C3%89l%C3%A9ments_cartographiques [4] https://taginfo.openstreetmap.org","KeywordList":["features","france_regions_polygon"],"EX_GeographicBoundingBox":[-6.2882069888366505,37.43560720274539,14.373044545912343,53.0918187695962],"BoundingBox":[{"crs":"CRS:84","extent":[-6.2882069888366505,37.43560720274539,14.373044545912343,53.0918187695962],"res":[null,null]},{"crs":"EPSG:3857","extent":[-700000,4500000,1600000,7000000],"res":[null,null]}],"Style":[{"Name":"polygon","Title":"A boring default style","Abstract":"A sample style that just prints out a transparent red interior with a red outline","LegendURL":[{"Format":"image/png","OnlineResource":"https://magosm.magellium.com/geoserver/ows?service=WMS&request=GetLegendGraphic&format=image%2Fpng&width=20&height=20&layer=magosm%3Afrance_regions_polygon","size":[20,20]}]}],"queryable":true,"opaque":false,"noSubsets":false},{"visible":false,"Attribution":{"Title":"© Magellium","OnlineResource":"https://magosm.magellium.com/informations.html"},"Name":"magosm:france_telecom_copper_connection_point","Title":"Localisations des Sous-Répartiteurs Cuivre (SR) - France métropolitaine","Abstract":"","KeywordList":["features","france_telecom_copper_connection_point"],"EX_GeographicBoundingBox":[-6.2882069888366505,37.43560720274539,14.373044545912343,53.0918187695962],"BoundingBox":[{"crs":"CRS:84","extent":[-6.2882069888366505,37.43560720274539,14.373044545912343,53.0918187695962],"res":[null,null]},{"crs":"EPSG:3857","extent":[-700000,4500000,1600000,7000000],"res":[null,null]}],"Style":[{"Name":"france_telecom_copper_connection_point","Title":"france_telecom_copper_connection_point","LegendURL":[{"Format":"image/png","OnlineResource":"https://magosm.magellium.com/geoserver/ows?service=WMS&request=GetLegendGraphic&format=image%2Fpng&width=20&height=20&layer=magosm%3Afrance_telecom_copper_connection_point","size":[169,20]}]}],"MaxScaleDenominator":70000000,"queryable":true,"opaque":false,"noSubsets":false},{"visible":false,"Attribution":{"Title":"© Magellium","OnlineResource":"https://magosm.magellium.com/informations.html"},"Name":"magosm:france_telecom_exchange_point","Title":"Localisations des noeuds de raccordement abonnés (NRA) et optiques (NRO) - France métropolitaine","Abstract":"","KeywordList":["features","france_telecom_exchange_point"],"EX_GeographicBoundingBox":[-6.2882069888366505,37.43560720274539,14.373044545912343,53.0918187695962],"BoundingBox":[{"crs":"CRS:84","extent":[-6.2882069888366505,37.43560720274539,14.373044545912343,53.0918187695962],"res":[null,null]},{"crs":"EPSG:3857","extent":[-700000,4500000,1600000,7000000],"res":[null,null]}],"Style":[{"Name":"france_telecom_exchange_point","Title":"france_telecom_exchange_point","LegendURL":[{"Format":"image/png","OnlineResource":"https://magosm.magellium.com/geoserver/ows?service=WMS&request=GetLegendGraphic&format=image%2Fpng&width=20&height=20&layer=magosm%3Afrance_telecom_exchange_point","size":[178,20]}]}],"queryable":true,"opaque":false,"noSubsets":false},{"visible":false,"Attribution":{"Title":"© Magellium","OnlineResource":"https://magosm.magellium.com/informations.html"},"Name":"magosm:france_telecom_fibre_connection_point","Title":"Localisations des Points de Mutualisation Fibre (PMZ) - France métropolitaine","Abstract":"Extrait quotidien des Points de Mutualisation Fibre (PMZ) en France métropolitaine présentes dans la base de données ouverte et collaborative OpenStreetMap (OSM) [1].\\r\\n\\r\\nModèle de données\\r\\n\\r\\nLes attributs OSM utilisés pour filtrer la donnée sont :\\r\\n\\r\\n    telecom =\'connection_point\'\\r\\n    telecom:medium=\'fibre\'\\r\\n\\r\\nOn retrouve dans la couche tous les objets concernés qu’ils soient cartographiés sous forme de nœud, chemin ou relation dans OSM. Pour les polygones et multi-polygones, la géométrie fournie correspond au centroïd, la géométrie d’origine est disponible au format EWKT via l’attribut ‘osm_original_geom’ et le type d’origine dans une colonne ‘osm_type’.\\r\\n\\r\\nDes attributs OSM supplémentaires ont été sélectionnés pour enrichir les tags principaux. Tous les attributs préfixés par \\"osm\\" (ex : osm_user, osm_id ...) sont des propriétés communes assimilables à des méta-données sur l\'objet OSM.\\r\\n\\r\\nPlus d\'informations sur :\\r\\n\\r\\n    le modèle de données des \\"connection points\\" sur la page Wiki OSM - FR:Tag:telecom=connection_point [2].\\r\\n    le modèle de données OSM général est documenté sur la page Wiki OSM - Eléments cartographiques [3].\\r\\n    les modes et fréquences d\'usage et de combinaison des différents attributs au sein de la communauté OSM sur le service TagInfo [4]\\r\\n\\r\\n[1] https://wiki.openstreetmap.org/wiki/FR:Page_principale\\r\\n[2] https://wiki.openstreetmap.org/wiki/FR:Tag:telecom=connection_point\\r\\n[3] https://wiki.openstreetmap.org/wiki/FR:%C3%89l%C3%A9ments_cartographiques\\r\\n[4] https://taginfo.openstreetmap.org/tags/?key=telecom&value=connection_point#overview","KeywordList":["features","france_telecom_fibre_connection_point"],"EX_GeographicBoundingBox":[-6.2882069888366505,37.43560720274539,14.373044545912343,53.0918187695962],"BoundingBox":[{"crs":"CRS:84","extent":[-6.2882069888366505,37.43560720274539,14.373044545912343,53.0918187695962],"res":[null,null]},{"crs":"EPSG:3857","extent":[-700000,4500000,1600000,7000000],"res":[null,null]}],"Style":[{"Name":"france_telecom_fibre_connection_point","Title":"france_telecom_fibre_connection_point","LegendURL":[{"Format":"image/png","OnlineResource":"https://magosm.magellium.com/geoserver/ows?service=WMS&request=GetLegendGraphic&format=image%2Fpng&width=20&height=20&layer=magosm%3Afrance_telecom_fibre_connection_point","size":[198,20]}]}],"MaxScaleDenominator":20000000,"queryable":true,"opaque":false,"noSubsets":false}],"getFeatureInfoUrl":"https://magosm.magellium.com/geoserver/ows?SERVICE=WMS&","wmsUrl":"https://magosm.magellium.com/geoserver/ows?SERVICE=WMS&","visible":true,"open":false,"name":"magOSM WMS Service"}');function j(e){return j="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},j(e)}function A(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function P(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?A(Object(n),!0).forEach((function(t){C(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):A(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function C(e,t,n){return(t=function(e){var t=function(e,t){if("object"!==j(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==j(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"===j(t)?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function F(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,a,i,s=[],l=!0,u=!1;try{if(a=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;l=!1}else for(;!(l=(r=a.call(n)).done)&&(s.push(r.value),s.length!==t);l=!0);}catch(e){u=!0,o=e}finally{try{if(!l&&null!=n.return&&(i=n.return(),Object(i)!==i))return}finally{if(u)throw o}}return s}}(e,t)||function(e,t){if(e){if("string"==typeof e)return I(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?I(e,t):void 0}}(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function I(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}const q={title:"MapComponents/MlWmsLoader",component:o.Z,argTypes:{url:{},layer:{}},decorators:u.Z};var k=function(e){var t=F((0,r.useState)(e.url||""),2),n=t[0],u=t[1],p=F((0,r.useState)(!1),2),d=p[0],g=p[1],y=F((0,r.useState)(!1),2),b=y[0],h=y[1],v=F((0,r.useState)(!0),2),S=v[0],_=v[1],O=F((0,r.useState)(!0),2),w=O[0],M=O[1];return r.createElement(r.Fragment,null,r.createElement(f,{open:b}),r.createElement(T,{open:d,close:function(){return g(!1)},load:function(e){u(e),g(!1)}}),r.createElement(m.Z,{buttons:r.createElement(r.Fragment,null,r.createElement(a.Z,{variant:S?"contained":"outlined",onClick:function(){return _(!S)},sx:{marginRight:{xs:"0px",sm:"10px"}}},"WMS Loader"),r.createElement("br",null),r.createElement("br",null),r.createElement(a.Z,{variant:d?"contained":"outlined",onClick:function(){g(!d),_(!0)},sx:{marginRight:{xs:"0px",sm:"10px"}}},"Demo WMS"),r.createElement("br",null),r.createElement("br",null),r.createElement(a.Z,{variant:"contained",onClick:function(){h(!0),setTimeout((function(){h(!1)}),5500)},sx:{display:"none"}},"Guide me through"))}),r.createElement(c.Z,{open:S,setOpen:_,name:"WMS Loader"},r.createElement(i.Z,{fullWidth:!0,sx:{marginTop:"10px"}},r.createElement(s.Z,{id:"wms_text_field",label:"WMS Url",variant:"standard",value:n,onChange:function(e){return u(e.target.value)},sx:{marginBottom:"10px"}})),r.createElement(l.Z,null,r.createElement(o.Z,{mapId:"map_1",url:n,onConfigChange:function(e){return console.log(e)},zoomToExtent:!0,featureInfoActive:w,setFeatureInfoActive:M}))))}.bind({});k.parameters={},k.args={};var B=function(){var e=F((0,r.useState)(!0),2),t=e[0],n=e[1],i=F((0,r.useState)(R),2),s=i[0],u=i[1];return r.createElement(r.Fragment,null,r.createElement(m.Z,{buttons:r.createElement(r.Fragment,null,r.createElement(a.Z,{variant:t?"contained":"outlined",onClick:function(){return n(!t)},sx:{marginRight:{xs:"0px",sm:"10px"}}},"WMS Loader"))}),r.createElement(c.Z,{open:t,setOpen:n,name:"WMS fixed config"},r.createElement(l.Z,null,r.createElement(o.Z,{mapId:"map_1",config:s,onConfigChange:function(e){console.log(e),u(e)},zoomToExtent:!0}))))}.bind({});B.parameters={},B.args={},k.parameters=P({storySource:{source:"(props: MlWmsLoaderStoryProps) => {\n\tconst [url, setUrl] = useState(props.url || '');\n\tconst [demoMode, setDemoMode] = useState(false);\n\tconst [guide, setGuide] = useState(false);\n\tconst [openSidebar, setOpenSidebar] = useState(true);\n\tconst [featureInfoActive, setFeatureInfoActive] = useState(true);\n\n\tconst openGuide = () => {\n\t\tsetGuide(true);\n\t\tsetTimeout(() => {\n\t\t\tsetGuide(false);\n\t\t}, 5500);\n\t};\n\n\tconst loader = (str: string) => {\n\t\tsetUrl(str);\n\t\tsetDemoMode(false);\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<MlWmsLoaderInstructions open={guide} />\n\t\t\t<WMSLinks open={demoMode} close={() => setDemoMode(false)} load={loader} />\n\t\t\t<TopToolbar\n\t\t\t\tbuttons={\n\t\t\t\t\t<>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant={openSidebar ? 'contained' : 'outlined'}\n\t\t\t\t\t\t\tonClick={() => setOpenSidebar(!openSidebar)}\n\t\t\t\t\t\t\tsx={{ marginRight: { xs: '0px', sm: '10px' } }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tWMS Loader\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant={demoMode ? 'contained' : 'outlined'}\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tsetDemoMode(!demoMode);\n\t\t\t\t\t\t\t\tsetOpenSidebar(true);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tsx={{ marginRight: { xs: '0px', sm: '10px' } }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tDemo WMS\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<br />\n\t\t\t\t\t\t<Button variant=\"contained\" onClick={openGuide} sx={{ display: 'none' }}>\n\t\t\t\t\t\t\tGuide me through\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</>\n\t\t\t\t}\n\t\t\t/>\n\n\t\t\t<Sidebar open={openSidebar} setOpen={setOpenSidebar} name={'WMS Loader'}>\n\t\t\t\t<FormControl fullWidth sx={{ marginTop: '10px' }}>\n\t\t\t\t\t<TextField\n\t\t\t\t\t\tid=\"wms_text_field\"\n\t\t\t\t\t\tlabel=\"WMS Url\"\n\t\t\t\t\t\tvariant=\"standard\"\n\t\t\t\t\t\tvalue={url}\n\t\t\t\t\t\tonChange={(ev) => setUrl(ev.target.value)}\n\t\t\t\t\t\tsx={{ marginBottom: '10px' }}\n\t\t\t\t\t/>\n\t\t\t\t</FormControl>\n\t\t\t\t<List>\n\t\t\t\t\t<MlWmsLoader\n\t\t\t\t\t\tmapId={'map_1'}\n\t\t\t\t\t\turl={url}\n\t\t\t\t\t\tonConfigChange={(config) => console.log(config)}\n\t\t\t\t\t\tzoomToExtent={true}\n\t\t\t\t\t\tfeatureInfoActive={featureInfoActive}\n\t\t\t\t\t\tsetFeatureInfoActive={setFeatureInfoActive}\n\t\t\t\t\t/>\n\t\t\t\t</List>\n\t\t\t</Sidebar>\n\t\t</>\n\t);\n}"}},k.parameters),B.parameters=P({storySource:{source:"() => {\n\tconst [openSidebar, setOpenSidebar] = useState(true);\n\tconst [config, setConfig] = useState(wmsConfig as unknown as WmsConfig);\n\n\treturn (\n\t\t<>\n\t\t\t<TopToolbar\n\t\t\t\tbuttons={\n\t\t\t\t\t<>\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tvariant={openSidebar ? 'contained' : 'outlined'}\n\t\t\t\t\t\t\tonClick={() => setOpenSidebar(!openSidebar)}\n\t\t\t\t\t\t\tsx={{ marginRight: { xs: '0px', sm: '10px' } }}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tWMS Loader\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</>\n\t\t\t\t}\n\t\t\t/>\n\n\t\t\t<Sidebar open={openSidebar} setOpen={setOpenSidebar} name={'WMS fixed config'}>\n\t\t\t\t<List>\n\t\t\t\t\t<MlWmsLoader\n\t\t\t\t\t\tmapId={'map_1'}\n\t\t\t\t\t\tconfig={config as unknown as WmsConfig}\n\t\t\t\t\t\tonConfigChange={(config) => {\n\t\t\t\t\t\t\tconsole.log(config);\n\t\t\t\t\t\t\tsetConfig(config as unknown as WmsConfig);\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tzoomToExtent={true}\n\t\t\t\t\t/>\n\t\t\t\t</List>\n\t\t\t</Sidebar>\n\t\t</>\n\t);\n}"}},B.parameters);var W=["ExampleConfig","ExampleFixedConfig"]},68299:(e,t,n)=>{n.d(t,{Z:()=>y});var r=n(2784),o=n(12642),a=n(61401);function i(e){return function(e){if(Array.isArray(e))return s(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||function(e,t){if(e){if("string"==typeof e)return s(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?s(e,t):void 0}}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function s(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var l=function e(t,n,r,a,s,l,u,c,m){var p=arguments;if(void 0!==a.current[l.current]){var d=l.current+1===a.current.length?t.geojson:o.TuJ([].concat(i(s.current),i(a.current[l.current].geometry.coordinates)));m(d),"function"==typeof t.onTransitionFrame&&t.onTransitionFrame(d),l.current++,r.current&&l.current<a.current.length?c.current=setTimeout((function(){return e.apply(void 0,i(p))}),u):("function"==typeof t.onTransitionEnd&&t.onTransitionEnd(t.geojson),r.current=!1)}},u=function(e,t,n,r,a,s,u,m,p,d){var f=[],g=[],y=[],b=[];t.current=[];var h=a.current||{geometry:{type:"LineString",coordinates:[]},properties:{},type:"Feature"},v=e.geojson,S=v,_=h,O=!1;if(void 0===S.geometry&&void 0!==_.geometry&&_.geometry.coordinates.length>1)S=o.TuJ(_.geometry.coordinates.slice(0,2));else if(void 0===_.geometry&&void 0!==S.geometry&&S.geometry.coordinates.length>1)_=o.TuJ(S.geometry.coordinates.slice(0,2));else if(void 0===_.geometry&&void 0===S.geometry)return;if(S.geometry.coordinates.length<_.geometry.coordinates.length&&(S=h,_=v,O=!0),S&&_)for(var w=0,M=S.geometry.coordinates.length;w<M;w++)void 0!==_.geometry.coordinates[w]&&S.geometry.coordinates[w][0]===_.geometry.coordinates[w][0]&&S.geometry.coordinates[w][1]===_.geometry.coordinates[w][1]?t.current.push(S.geometry.coordinates[w]):(void 0!==S.geometry.coordinates[w]&&g.push(S.geometry.coordinates[w]),void 0!==_.geometry.coordinates[w]&&f.push(_.geometry.coordinates[w]));if(O?(y=f,b=g):(y=g,b=f),!(y.length<2&&b<2)){var x,L=e.transitionTime/s,E=b.length>1?Math.round(o.kE(o.TuJ(b))):0,T=y.length>1?Math.round(o.kE(o.TuJ(y))):0,R=T+E,j=E/R,A=Math.round(L*j),P=Math.round(E/A*100)/100,C=T/R,F=Math.round(L*C),I=Math.round(T/F*100)/100;(x=i(c(b,P,A))).reverse(),(x=[].concat(i(x),i(c(y,I,F)))).push(v),n.current=x,u.current=1,r.current=!0,p.current=setTimeout((function(){return l(e,m,r,n,t,u,s,p,d)}),s)}},c=function(e,t,n){var r=[];if(e.length>1)for(var a=o.Du7(o.TuJ(e),t),s=a.features[0],l=0;l<n&&(r.push(s),void 0!==a.features[l]);l++)s=o.TuJ([].concat(i(s.geometry.coordinates),i(a.features[l].geometry.coordinates)));return r},m=n(7443),p=["geojson"];function d(){return d=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},d.apply(this,arguments)}function f(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var g=function(e){e.geojson;var t,n,i=function(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}(e,p),s=(0,a.Z)({mapId:e.mapId,waitForLayer:e.insertBeforeLayer}),l=(0,r.useRef)(!1),c=(0,r.useRef)(),g=(0,r.useRef)(!1),y=(0,r.useRef)(void 0),b=(0,r.useRef)(!1),h=(0,r.useRef)([]),v=(0,r.useRef)([]),S=(t=(0,r.useState)(o.uf4([])),n=2,function(e){if(Array.isArray(e))return e}(t)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,a,i,s=[],l=!0,u=!1;try{if(a=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;l=!1}else for(;!(l=(r=a.call(n)).done)&&(s.push(r.value),s.length!==t);l=!0);}catch(e){u=!0,o=e}finally{try{if(!l&&null!=n.return&&(i=n.return(),Object(i)!==i))return}finally{if(u)throw o}}return s}}(t,n)||function(e,t){if(e){if("string"==typeof e)return f(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?f(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),_=S[0],O=S[1];(0,r.useEffect)((function(){return function(){y.current&&clearTimeout(y.current)}}),[]);var w=(0,r.useCallback)((function(){u(e,v,h,g,c,50,b,s.map,y,O)}),[e,s.map]);(0,r.useEffect)((function(){s.map&&l.current&&(void 0!==e.transitionTime&&"line"===e.type&&c.current&&(g.current=!1,b.current=!1,h.current=[],v.current=[],w()),c.current=e.geojson)}),[s.map,w,e]);var M=(0,r.useCallback)((function(){"line"===e.type&&void 0!==e.transitionTime&&e.transitionTime&&void 0!==e.geojson&&JSON.stringify(c.current)!==JSON.stringify(e.geojson)&&(w(),c.current=e.geojson)}),[e,w]);return(0,r.useEffect)((function(){s.mapIsReady&&e.geojson&&(l.current=!0,M())}),[s.mapIsReady,M,e]),r.createElement(r.Fragment,null,r.createElement(m.Z,d({},i,{geojson:_})))};const y=g;try{g.displayName="MlTransitionGeoJsonLayer",g.__docgenInfo={description:'Adds source and layer of types "line", "fill" or "circle" to display GeoJSON data on the map.',displayName:"MlTransitionGeoJsonLayer",props:{mapId:{defaultValue:null,description:"Id of the target MapLibre instance in mapContext",name:"mapId",required:!1,type:{name:"string | undefined"}},insertBeforeLayer:{defaultValue:null,description:'Id of an existing layer in the mapLibre instance to help specify the layer order\nThis layer will be visually beneath the layer with the "insertBeforeLayer" id.\nThis layer will not be added to the maplibre-gl instance until a layer with an\nid that matches the value of insertBeforeLayer is created.',name:"insertBeforeLayer",required:!1,type:{name:"string | undefined"}},layerId:{defaultValue:null,description:"Id of the new layer and source that are added to the MapLibre instance",name:"layerId",required:!1,type:{name:"string | undefined"}},geojson:{defaultValue:null,description:"GeoJSON data that is supposed to be rendered by this component.",name:"geojson",required:!0,type:{name:"Feature<Geometry | GeometryCollection, Properties> | FeatureCollection<Geometry | GeometryCollection, Properties> | undefined"}},type:{defaultValue:null,description:"Type of the layer that will be added to the MapLibre instance.\nAll types from LayerSpecification union type are supported except the type from\nRasterLayerSpecification",name:"type",required:!1,type:{name:"enum",value:[{value:"undefined"},{value:'"symbol"'},{value:'"fill"'},{value:'"line"'},{value:'"circle"'},{value:'"heatmap"'},{value:'"fill-extrusion"'},{value:'"hillshade"'},{value:'"background"'}]}},paint:{defaultValue:null,description:"Paint property object, that is passed to the addLayer call.\nPossible props depend on the layer type.\nSee https://maplibre.org/maplibre-gl-js-docs/style-spec/layers/\nSome examples are:\nhttps://maplibre.org/maplibre-gl-js-docs/style-spec/layers/#line\nhttps://maplibre.org/maplibre-gl-js-docs/style-spec/layers/#circle\nhttps://maplibre.org/maplibre-gl-js-docs/style-spec/layers/#fill\nAll paint types from LayerSpecification union type are supported except the paint type from\nRasterLayerSpecification",name:"paint",required:!1,type:{name:'{ "fill-antialias"?: PropertyValueSpecification<boolean> | undefined; "fill-opacity"?: DataDrivenPropertyValueSpecification<number> | undefined; ... 4 more ...; "fill-pattern"?: DataDrivenPropertyValueSpecification<...> | undefined; } | ... 7 more ... | undefined'}},layout:{defaultValue:null,description:"Layout property object, that is passed to the addLayer call.\nPossible props depend on the layer type.\nSee https://maplibre.org/maplibre-gl-js-docs/style-spec/layers/\nSome examples are:\nhttps://maplibre.org/maplibre-gl-js-docs/style-spec/layers/#line\nhttps://maplibre.org/maplibre-gl-js-docs/style-spec/layers/#circle\nhttps://maplibre.org/maplibre-gl-js-docs/style-spec/layers/#fill\nAll layout types from LayerSpecification union type are supported except the layout type from\nRasterLayerSpecification",name:"layout",required:!1,type:{name:"undefined"}},options:{defaultValue:null,description:"Javascript object that is spread into the addLayer commands first parameter.",name:"options",required:!1,type:{name:"Partial<LayerSpecification & { source?: Partial<VectorSourceSpecification | RasterSourceSpecification | RasterDEMSourceSpecification | GeoJSONSourceSpecification> | undefined; id?: string | undefined; }> | undefined"}},defaultPaintOverrides:{defaultValue:null,description:'Javascript object with optional properties "fill", "line", "circle" to override implicit layer type default paint properties.',name:"defaultPaintOverrides",required:!1,type:{name:'{ circle?: { "circle-radius"?: DataDrivenPropertyValueSpecification<number> | undefined; "circle-color"?: DataDrivenPropertyValueSpecification<string> | undefined; ... 8 more ...; "circle-stroke-opacity"?: DataDrivenPropertyValueSpecification<...> | undefined; } | undefined; fill?: { ...; } | undefined; line?: { ......'}},onHover:{defaultValue:null,description:"Hover event handler that is executed whenever a geometry rendered by this component is hovered.",name:"onHover",required:!1,type:{name:"((ev: MapEventType) => void | Map) | undefined"}},onClick:{defaultValue:null,description:"Click event handler that is executed whenever a geometry rendered by this component is clicked.",name:"onClick",required:!1,type:{name:"((ev: MapEventType) => void | Map) | undefined"}},onLeave:{defaultValue:null,description:"Leave event handler that is executed whenever a geometry rendered by this component is\nleft/unhovered.",name:"onLeave",required:!1,type:{name:"((ev: MapEventType) => void | Map) | undefined"}},transitionTime:{defaultValue:null,description:"",name:"transitionTime",required:!0,type:{name:"number"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/MlTransitionGeoJsonLayer/MlTransitionGeoJsonLayer.tsx#MlTransitionGeoJsonLayer"]={docgenInfo:g.__docgenInfo,name:"MlTransitionGeoJsonLayer",path:"src/components/MlTransitionGeoJsonLayer/MlTransitionGeoJsonLayer.tsx#MlTransitionGeoJsonLayer"})}catch(e){}},48904:(e,t,n)=>{n.d(t,{Z:()=>c});var r=n(2784),o=n(61401);function a(e){return a="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},a(e)}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t,n){return(t=function(e){var t=function(e,t){if("object"!==a(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==a(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"===a(t)?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var u=function(e){var t=(0,o.Z)({mapId:e.mapId,waitForLayer:e.insertBeforeLayer}),n=(0,r.useRef)(e.layerId||"MlVectorTileLayer-"+t.componentId),a=(0,r.useRef)({}),i=(0,r.useRef)({}),l=(0,r.useRef)(!1),u=(0,r.useCallback)((function(){t.map&&(l.current=!0,t.map.map.getSource(n.current)&&t.cleanup(),t.map.map.getSource(n.current)||t.map.addSource(n.current,s({type:"vector",tiles:[e.url||""],attribution:"",minzoom:0,maxzoom:14},e.sourceOptions),t.componentId),e.layers.forEach((function(r){t.map&&(t.map.addLayer(s({source:n.current,minzoom:0,maxzoom:22,layout:{},paint:{"line-opacity":.5,"line-color":"rgb(80, 80, 80)","line-width":2}},r),e.insertBeforeLayer,t.componentId),a.current[r.id]=JSON.stringify(r.paint),i.current[r.id]=JSON.stringify(r.layout),t.map.on("styledata",(function(){var e;!l.current||null!==(e=t.map)&&void 0!==e&&e.map.getSource(n.current)||(console.log("Recreate Layer "+n.current),u())}),t.componentId))})))}),[t.map,e]),c=(0,r.useCallback)((function(){l.current&&e.layers.forEach((function(e){if(t.map&&t.map.map.getLayer(e.id)){var n=JSON.stringify(e.paint);if(n!==a.current[e.id])for(var r in e.paint)t.map.map.setPaintProperty(e.id,r,e.paint[r]);a.current[e.id]=n;var o=JSON.stringify(e.layout);if(o!==i.current[e.id])for(var s in e.layout)t.map.map.setLayoutProperty(e.id,s,e.layout[s]);i.current[e.id]=o}}))}),[t.map,e.layers]);return(0,r.useEffect)((function(){l.current||u()}),[u]),(0,r.useEffect)((function(){t.map&&l.current&&u()}),[e.layers.length,t.map]),(0,r.useEffect)((function(){t.map&&l.current&&c()}),[e.layers,t.map]),r.createElement(r.Fragment,null)};const c=u;try{u.displayName="MlVectorTileLayer",u.__docgenInfo={description:"Adds a vector-tile source and 0...n vector-tile-layers to the MapLibre instance referenced by\nprops.mapId",displayName:"MlVectorTileLayer",props:{mapId:{defaultValue:null,description:"",name:"mapId",required:!1,type:{name:"string | undefined"}},insertBeforeLayer:{defaultValue:null,description:"",name:"insertBeforeLayer",required:!1,type:{name:"string | undefined"}},layerId:{defaultValue:null,description:"",name:"layerId",required:!1,type:{name:"string | undefined"}},sourceOptions:{defaultValue:null,description:"",name:"sourceOptions",required:!1,type:{name:"VectorSourceSpecification | undefined"}},url:{defaultValue:null,description:"",name:"url",required:!1,type:{name:"string | undefined"}},layers:{defaultValue:null,description:"",name:"layers",required:!0,type:{name:"LayerSpecification[]"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/MlVectorTileLayer/MlVectorTileLayer.tsx#MlVectorTileLayer"]={docgenInfo:u.__docgenInfo,name:"MlVectorTileLayer",path:"src/components/MlVectorTileLayer/MlVectorTileLayer.tsx#MlVectorTileLayer"})}catch(e){}},71022:(e,t,n)=>{n.d(t,{Z:()=>u});var r=n(2784),o=n(13980),a=n.n(o),i=n(27367),s=n(91004),l=function(e){var t=(0,r.useContext)(i.Z),n=(0,r.useRef)(!1),o=(0,r.useRef)(void 0),a=(0,r.useRef)((e.idPrefix?e.idPrefix:"MlWmsFeatureInfoPopup-")+(0,s.Z)());return(0,r.useEffect)((function(){var e=a.current;return function(){o.current&&(o.current.cleanup(e),o.current=void 0),n.current=!1}}),[]),(0,r.useEffect)((function(){t.mapExists(e.mapId)&&!n.current&&(n.current=!0,o.current=t.getMap(e.mapId),o.current.setCenter([7.132122000552613,50.716405378037706]))}),[t.mapIds,t,e.mapId]),r.createElement(r.Fragment,null)};l.defaultProps={mapId:void 0},l.propTypes={mapId:a().string},l.__docgenInfo={description:"TODO: Add short & useful description\n\n@param {object} props\n@param {string} props.mapId Id of the target MapLibre instance in mapContext\n\n@component",methods:[],displayName:"MlWmsFeatureInfoPopup",props:{mapId:{defaultValue:{value:"undefined",computed:!0},description:"Id of the target MapLibre instance in mapContext",type:{name:"string"},required:!1}}};const u=l;"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/MlWmsFeatureInfoPopup/MlWmsFeatureInfoPopup.js"]={name:"MlWmsFeatureInfoPopup",docgenInfo:l.__docgenInfo,path:"src/components/MlWmsFeatureInfoPopup/MlWmsFeatureInfoPopup.js"})},47281:(e,t,n)=>{n.d(t,{Z:()=>d});var r=n(2784),o=n(61401),a=n(13980),i=n.n(a);function s(e){return s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},s(e)}function l(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function u(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?l(Object(n),!0).forEach((function(t){c(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):l(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t,n){return(t=function(e){var t=function(e,t){if("object"!==s(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==s(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"===s(t)?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}var m={visible:!0,urlParameters:{bbox:"{bbox-epsg-3857}",format:"image/png",service:"WMS",version:"1.1.1",request:"GetMap",srs:"EPSG:3857",width:256,height:256,styles:""},attribution:"",sourceOptions:{minZoom:0,maxZoom:20},layerOptions:{minZoom:0,maxZoom:20}},p=function(e){var t=(0,o.Z)({mapId:e.mapId,waitForLayer:e.insertBeforeLayer}),n=(0,r.useRef)(!1),a=(0,r.useRef)(e.layerId||"MlWmsLayer-"+t.componentId),i=(0,r.useMemo)((function(){var t,n,r=e.url;-1!==e.url.indexOf("?")&&(r=(n=e.url.split("?"))[0]);var o=new URLSearchParams(null===(t=n)||void 0===t?void 0:t[1]),a=u(u(u({},m.urlParameters),Object.fromEntries(o)),e.urlParameters),i=new URLSearchParams(a);return r+"?"+(decodeURIComponent(i.toString())+"".replace(/%2F/g,"/").replace(/%3A/g,":"))}),[e.urlParameters,e.url]),s=(0,r.useCallback)((function(){t.map&&(n.current=!0,t.map.map.getLayer(a.current)&&t.cleanup(),t.map.addSource(a.current,u({type:"raster",tiles:[i],tileSize:256,attribution:e.attribution},e.sourceOptions),t.componentId),t.map.addLayer(u({id:a.current,type:"raster",source:a.current},e.layerOptions),e.insertBeforeLayer,t.componentId),t.map.on("styledata",(function(){var e;!n.current||null!==(e=t.map)&&void 0!==e&&e.map.getLayer(a.current)||(console.log("Recreate Layer "+a.current),s())}),t.componentId),e.visible||t.map.map.setLayoutProperty(a.current,"visibility","none"))}),[t.map,e,i]);return(0,r.useEffect)((function(){n.current||s()}),[s]),(0,r.useEffect)((function(){var e,r,o,s;t.map&&null!==(e=t.map)&&void 0!==e&&null!==(r=e.map)&&void 0!==r&&null!==(o=r.style)&&void 0!==o&&null!==(s=o.sourceCaches)&&void 0!==s&&s[a.current]&&n.current&&(t.map.map.getSource(a.current).tiles=[i],t.map.map.style.sourceCaches[a.current].clearTiles(),t.map.map.style.sourceCaches[a.current].update(t.map.map.transform),t.map.map.triggerRepaint())}),[t.map,i]),(0,r.useEffect)((function(){t.map&&n.current&&(e.visible?t.map.map.setLayoutProperty(a.current,"visibility","visible"):t.map.map.setLayoutProperty(a.current,"visibility","none"))}),[e.visible,t.map]),r.createElement(r.Fragment,null)};p.defaultProps=u({},m),p.propTypes={url:i().string.isRequired,urlParameters:i().shape({layers:i().string.isRequired,bbox:i().string,format:i().string,service:i().string,version:i().string,request:i().string,srs:i().string,width:i().number,height:i().number}),mapId:i().string,attribution:i().string,layerOptions:i().object,sourceOptions:i().object,insertBeforeLayer:i().string,visible:i().bool};const d=p;try{p.displayName="MlWmsLayer",p.__docgenInfo={description:"Adds a WMS raster source & layer to the maplibre-gl instance",displayName:"MlWmsLayer",props:{urlParameters:{defaultValue:null,description:"",name:"urlParameters",required:!1,type:{name:"{ [key: string]: string; } | undefined"}},url:{defaultValue:null,description:"",name:"url",required:!0,type:{name:"string"}},visible:{defaultValue:null,description:"",name:"visible",required:!1,type:{name:"boolean | undefined"}},attribution:{defaultValue:null,description:"",name:"attribution",required:!1,type:{name:"string | undefined"}},mapId:{defaultValue:null,description:"",name:"mapId",required:!1,type:{name:"string | undefined"}},sourceOptions:{defaultValue:null,description:"",name:"sourceOptions",required:!1,type:{name:"RasterSourceSpecification | undefined"}},layerOptions:{defaultValue:null,description:"",name:"layerOptions",required:!1,type:{name:"RasterLayerSpecification | undefined"}},insertBeforeLayer:{defaultValue:null,description:"",name:"insertBeforeLayer",required:!1,type:{name:"string | undefined"}},layerId:{defaultValue:null,description:"",name:"layerId",required:!1,type:{name:"string | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/MlWmsLayer/MlWmsLayer.tsx#MlWmsLayer"]={docgenInfo:p.__docgenInfo,name:"MlWmsLayer",path:"src/components/MlWmsLayer/MlWmsLayer.tsx#MlWmsLayer"})}catch(e){}},70292:(e,t,n)=>{n.d(t,{Z:()=>k});var r=n(2784),o=n(47281),a=n(84920),i=n(18656),s=n(69208),l=n(42440),u=n(70576),c=n(59334),m=n(6867),p=n(61401),d=n(97608),f=n(99226),g=n(48885),y=n(14212),b=n(62267),h=n(84485),v=n(6163),S=n(36322),_=n(12642);function O(e){return O="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e},O(e)}var w=["CRS"],M=["CRS"];function x(){return x=Object.assign?Object.assign.bind():function(e){for(var t=1;t<arguments.length;t++){var n=arguments[t];for(var r in n)Object.prototype.hasOwnProperty.call(n,r)&&(e[r]=n[r])}return e},x.apply(this,arguments)}function L(e){return function(e){if(Array.isArray(e))return C(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||P(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function E(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}function T(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function R(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?T(Object(n),!0).forEach((function(t){j(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):T(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function j(e,t,n){return(t=function(e){var t=function(e,t){if("object"!==O(e)||null===e)return e;var n=e[Symbol.toPrimitive];if(void 0!==n){var r=n.call(e,"string");if("object"!==O(r))return r;throw new TypeError("@@toPrimitive must return a primitive value.")}return String(e)}(e);return"symbol"===O(t)?t:String(t)}(t))in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function A(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,a,i,s=[],l=!0,u=!1;try{if(a=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;l=!1}else for(;!(l=(r=a.call(n)).done)&&(s.push(r.value),s.length!==t);l=!0);}catch(e){u=!0,o=e}finally{try{if(!l&&null!=n.return&&(i=n.return(),Object(i)!==i))return}finally{if(u)throw o}}return s}}(e,t)||P(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function P(e,t){if(e){if("string"==typeof e)return C(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?C(e,t):void 0}}function C(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var F=2*Math.PI*6378137/2,I=function(e){var t=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{enable:!0,decimal:1},n=e.lng,r=e.lat,o=n*F/180,a=Math.log(Math.tan((90+r)*Math.PI/360))/(Math.PI/180);return a=a*F/180,t.enable&&(o=Number(o.toFixed(t.decimal)),a=Number(a.toFixed(t.decimal))),[o,a]},q=function(e){var t,n,O,T,j,P,C,F,q,k,B=(0,i.Z)({urlParameters:e.urlParameters}),W=B.capabilities,G=B.error,N=B.setUrl,D=B.getFeatureInfoUrl,Z=B.wmsUrl,U=A((0,r.useState)((null==e||null===(t=e.config)||void 0===t?void 0:t.open)||!1),2),V=U[0],z=U[1],K=A((0,r.useState)((null==e||null===(n=e.config)||void 0===n?void 0:n.visible)||!0),2),X=K[0],J=K[1],Y=A((0,r.useState)(!1),2),H=Y[0],$=Y[1],Q=(0,p.Z)({mapId:null==e?void 0:e.mapId}),ee=A((0,r.useState)((null==e||null===(O=e.config)||void 0===O?void 0:O.layers)||[]),2),te=ee[0],ne=ee[1],re=A((0,r.useState)(!1),2),oe=re[0],ae=re[1],ie=A((0,r.useState)(),2),se=ie[0],le=ie[1],ue=A((0,r.useState)(void 0),2),ce=ue[0],me=ue[1];(0,r.useEffect)((function(){e.config||N(e.url)}),[e.url]);var pe=(0,r.useMemo)((function(){var t;return(null==e||null===(t=e.config)||void 0===t?void 0:t.wmsUrl)||Z}),[null==e||null===(T=e.config)||void 0===T?void 0:T.wmsUrl,Z]),de=(0,r.useMemo)((function(){var t;return(null==e||null===(t=e.config)||void 0===t?void 0:t.getFeatureInfoUrl)||D}),[null==e||null===(j=e.config)||void 0===j?void 0:j.getFeatureInfoUrl,D]),fe=(0,r.useMemo)((function(){return W}),[W]),ge=(0,r.useMemo)((function(){var t,n;return(null==e?void 0:e.name)||(null==e||null===(t=e.config)||void 0===t?void 0:t.name)||(null==fe||null===(n=fe.Service)||void 0===n?void 0:n.Title)}),[null==e?void 0:e.name,null==e||null===(P=e.config)||void 0===P?void 0:P.name,null==fe||null===(C=fe.Service)||void 0===C?void 0:C.Title]),ye=(0,r.useMemo)((function(){var t;return null!=e&&e.setLayers&&(null==e||null===(t=e.config)||void 0===t?void 0:t.layers)||te}),[null==e||null===(F=e.config)||void 0===F?void 0:F.layers,te]),be=(0,r.useMemo)((function(){return(null==e?void 0:e.setLayers)||ne}),[null==e?void 0:e.setLayers,ne]);(0,r.useEffect)((function(){var t;null==e||null===(t=e.onConfigChange)||void 0===t||t.call(e,{layers:ye,getFeatureInfoUrl:de,wmsUrl:pe,visible:X,open:V,name:ge})}),[ye,fe,de,pe,X,V,ge]);var he=(0,r.useMemo)((function(){return ye.filter((function(e){var t;return e.visible&&(null==e||null===(t=e.Attribution)||void 0===t?void 0:t.Title)})).map((function(e){var t;return null==e||null===(t=e.Attribution)||void 0===t?void 0:t.Title})).filter((function(e,t,n){return n.indexOf(e)===t})).join(" ")}),[ye]),ve=function(){le(void 0),me(void 0)},Se=(0,r.useCallback)((function(t){var n,r,o,a,i;if(Q.map){ve();var s,l=Q.map.unproject([t.point.x,t.point.y]),u=_.xmu([l.lng,l.lat]),c=_.f3b(u,50,{units:"meters"}),m=_.VWR(c),p=I({lng:m[0],lat:m[1]}),d=I({lng:m[2],lat:m[3]}),f={REQUEST:"GetFeatureInfo",BBOX:[p[0],p[1],d[0],d[1]].join(","),SERVICE:"WMS",INFO_FORMAT:-1!==(null==fe||null===(n=fe.Capability)||void 0===n||null===(r=n.Request)||void 0===r?void 0:r.GetFeatureInfo.Format.indexOf("text/html"))?"text/html":"text/plain",FEATURE_COUNT:"10",LAYERS:ye.map((function(e){return e.visible&&e.queryable?e.Name:void 0})).filter((function(e){return e})),QUERY_LAYERS:ye.map((function(e){return e.visible&&e.queryable?e.Name:void 0})).filter((function(e){return e})),WIDTH:100,HEIGHT:100,srs:"EPSG:3857",CRS:"EPSG:3857",version:"1.3.0",X:50,Y:50,I:50,J:50,buffer:"50"},g=de;-1!==(null===(o=g)||void 0===o||null===(a=o.indexOf)||void 0===a?void 0:a.call(o,"?"))&&(g=(s=e.url.split("?"))[0]);var y=new URLSearchParams(null===(i=s)||void 0===i?void 0:i[1]),b=R(R({},Object.fromEntries(y)),f),h=new URLSearchParams(b);fetch(e.url+"?"+h.toString()).then((function(e){if(!e.ok)throw new Error("FeatureInfo could not be fetched");return e.text()})).then((function(e){le(t.lngLat),me(e)})).catch((function(e){return console.log(e)}))}}),[fe,de,e,Q,ye]),_e=(0,r.useMemo)((function(){return(void 0!==(null==e?void 0:e.featureInfoActive)&&e.featureInfoActive||oe)&&(null==ye?void 0:ye.some((function(e){return e.visible&&e.queryable})))&&!!Q.map}),[null==e?void 0:e.featureInfoActive,oe,ye,Q.map]);return(0,r.useEffect)((function(){if(_e){var e=Se;return Q.map.map.on("click",e),function(){var t,n,r;null===(t=Q.map)||void 0===t||null===(n=(r=t.map).off)||void 0===n||n.call(r,"click",e)}}ve()}),[_e,Se,Q.map]),(0,r.useEffect)((function(){var t,n,r,o,a,i,s,l;if(null!=fe&&fe.Service)if(-1===(null==fe||null===(t=fe.Capability)||void 0===t||null===(n=t.Layer)||void 0===n||null===(r=n.CRS)||void 0===r||null===(o=r.indexOf)||void 0===o?void 0:o.call(r,"EPSG:3857"))&&-1===(null==fe||null===(a=fe.Capability)||void 0===a||null===(i=a.Layer)||void 0===i||null===(s=i.CRS)||void 0===s||null===(l=s.indexOf)||void 0===l?void 0:l.call(s,"CRS:84")))console.log("MlWmsLoader ("+fe.Service.Title+"): No WGS 84/Pseudo-Mercator support");else{var u,c,m,p;console.log("MlWmsLoader ("+fe.Service.Title+"): WGS 84/Pseudo-Mercator supported");var d=[],f=null==fe||null===(u=fe.Capability)||void 0===u||null===(c=u.Layer)||void 0===c?void 0:c.Layer.filter((function(e){var t;return!(null!==(t=e.Layer)&&void 0!==t&&t.length)})).map((function(e,t){var n,r,o,a;return 0===t&&(d=e.EX_GeographicBoundingBox),R({visible:!((null==fe||null===(n=fe.Capability)||void 0===n||null===(r=n.Layer)||void 0===r||null===(o=r.Layer)||void 0===o?void 0:o.length)>2)||t>1,Attribution:{Title:""}},((a=e).CRS,E(a,w)))}));null==fe||null===(m=fe.Capability)||void 0===m||null===(p=m.Layer)||void 0===p||p.Layer.forEach((function(e){var t,n=null==e||null===(t=e.Layer)||void 0===t?void 0:t.filter((function(e){return e.CRS.length})).map((function(e,t){return 0===t&&(d=e.EX_GeographicBoundingBox),R({visible:!1,Attribution:{Title:""}},((n=e).CRS,E(n,M)));var n}));n&&(f=[].concat(L(f),L(n)))})),be(f),e.zoomToExtent&&null!=Q&&Q.map&&d.length>3&&(null==Q||Q.map.fitBounds([[d[0],d[1]],[d[2],d[3]]]))}}),[fe,Q.map]),r.createElement(r.Fragment,null,G&&r.createElement(d.Z,null,r.createElement(f.Z,null,G)),pe&&r.createElement(r.Fragment,null,r.createElement(u.ZP,{secondaryAction:r.createElement(r.Fragment,null,e.buttons,e.featureInfoEnabled&&r.createElement(m.Z,{sx:{padding:"4px",marginTop:"-3px",marginRight:"4px",background:function(e){return null!=ye&&ye.some((function(e){return e.visible&&e.queryable}))?_e?e.palette.info.light:e.palette.grey[300]:"initial"}},"aria-label":"featureinfo",onClick:function(){"function"==typeof(null==e?void 0:e.setFeatureInfoActive)?e.setFeatureInfoActive((function(e){return!e})):ae((function(e){return!e}))},disabled:!(null!=ye&&ye.some((function(e){return e.visible&&e.queryable})))},r.createElement(s.Z,null)),r.createElement(m.Z,{edge:!e.showDeleteButton&&"end",sx:R({padding:"4px",marginTop:"-3px"},e.showDeleteButton?{marginRight:"4px"}:{}),"aria-label":"open",onClick:function(){return z((function(e){return!e}))}},V?r.createElement(b.Z,null):r.createElement(h.Z,null)),e.showDeleteButton&&r.createElement(r.Fragment,null,r.createElement(m.Z,{"aria-label":"delete",edge:"end",onClick:function(){"function"==typeof e.onConfigChange&&$(!0)},sx:{padding:"4px",marginTop:"-3px"}},r.createElement(v.Z,null)),H&&r.createElement(S.Z,{open:H,onConfirm:function(){"function"==typeof e.onConfigChange&&e.onConfigChange(!1)},onCancel:function(){$(!1)},title:"Delete layer",text:"Are you sure you want to delete this layer?"}))),sx:{paddingRight:0,paddingLeft:0,paddingTop:0,paddingBottom:"4px"}},r.createElement(g.Z,{sx:{minWidth:"30px"}},r.createElement(y.Z,{sx:{padding:0},checked:X,onClick:function(){J((function(e){return!e}))}})),r.createElement(c.Z,{primary:ge,variant:"layerlist"})),r.createElement(f.Z,{sx:{display:V?"block":"none"}},r.createElement(l.Z,{dense:!0,component:"div",disablePadding:!0,sx:{paddingLeft:"18px"}},pe&&(null==ye||null===(q=ye.map)||void 0===q?void 0:q.call(ye,(function(e,t){return null!=e&&e.Name?r.createElement(u.ZP,{key:e.Name+t,secondaryAction:r.createElement(r.Fragment,null,(null==e?void 0:e.queryable)&&r.createElement(s.Z,null))},r.createElement(g.Z,{sx:{minWidth:"30px"}},r.createElement(y.Z,{checked:e.visible,sx:{padding:0},onClick:function(){var e=L(ye);e[t].visible=!e[t].visible,be(L(e))}})),r.createElement(c.Z,{primary:null==e?void 0:e.Title,variant:"layerlist"})):r.createElement(r.Fragment,null)})))),pe&&(null==ye?void 0:ye.length)&&r.createElement(o.Z,{key:Q.componentId,url:pe,attribution:he,visible:X,urlParameters:R(R({},e.wmsUrlParameters),{},{layers:null==ye||null===(k=ye.filter)||void 0===k?void 0:k.call(ye,(function(e){return e.visible})).map((function(e){return e.Name})).reverse().join(",")}),insertBeforeLayer:null==e?void 0:e.insertBeforeLayer})),e.featureInfoEnabled&&se&&r.createElement(a.Z,x({},se,{content:ce}))))};q.defaultProps={mapId:void 0,url:"",urlParameters:{SERVICE:"WMS",VERSION:"1.3.0",REQUEST:"GetCapabilities"},wmsUrlParameters:{TRANSPARENT:"TRUE"},featureInfoEnabled:!0,zoomToExtent:!1,showDeleteButton:!1};const k=q;try{q.displayName="MlWmsLoader",q.__docgenInfo={description:"Loads a WMS getCapabilities xml document and adds a MlWmsLayer component for each layer that is\noffered by the WMS.",displayName:"MlWmsLoader",props:{url:{defaultValue:{value:""},description:"WMS URL",name:"url",required:!1,type:{name:"string"}},mapId:{defaultValue:{value:"undefined"},description:"Id of the target MapLibre instance in mapContext",name:"mapId",required:!1,type:{name:"string | undefined"}},insertBeforeLayer:{defaultValue:null,description:"",name:"insertBeforeLayer",required:!1,type:{name:"string | undefined"}},urlParameters:{defaultValue:{value:"{\n\t\tSERVICE: 'WMS',\n\t\tVERSION: '1.3.0',\n\t\tREQUEST: 'GetCapabilities',\n\t}"},description:"URL parameters that will be used in the getCapabilities request",name:"urlParameters",required:!1,type:{name:"{ [key: string]: string; } | undefined"}},wmsUrlParameters:{defaultValue:{value:"{\n\t\tTRANSPARENT: 'TRUE',\n\t}"},description:"URL parameters that will be added when requesting WMS capabilities",name:"wmsUrlParameters",required:!1,type:{name:"{ [key: string]: string; } | undefined"}},zoomToExtent:{defaultValue:{value:"false"},description:"If true, zooms to the extent of the WMS layer after loading the getCapabilities response",name:"zoomToExtent",required:!1,type:{name:"boolean | undefined"}},name:{defaultValue:null,description:"The name of the ListItem element representing the WmsLoader",name:"name",required:!1,type:{name:"string | undefined"}},featureInfoEnabled:{defaultValue:{value:"true"},description:"If true, enables the feature info functionality",name:"featureInfoEnabled",required:!1,type:{name:"boolean | undefined"}},featureInfoActive:{defaultValue:null,description:"If true, the feature info functionality is active",name:"featureInfoActive",required:!1,type:{name:"boolean | undefined"}},setFeatureInfoActive:{defaultValue:null,description:"A function to set the feature info active state",name:"setFeatureInfoActive",required:!1,type:{name:"((val: boolean | ((current: boolean) => boolean)) => void) | undefined"}},config:{defaultValue:null,description:"The WMS configuration object",name:"config",required:!1,type:{name:"WmsConfig | undefined"}},onConfigChange:{defaultValue:null,description:"A function to handle changes to the WMS configuration",name:"onConfigChange",required:!1,type:{name:"((config: false | WmsConfig) => void) | undefined"}},setLayers:{defaultValue:null,description:"A function to update a LayerType config array that is passed to this component at props.config.layers",name:"setLayers",required:!1,type:{name:"((layers: LayerType[]) => void) | undefined"}},showDeleteButton:{defaultValue:{value:"false"},description:"If true, shows the delete button for the WMSLoader",name:"showDeleteButton",required:!1,type:{name:"boolean | undefined"}},buttons:{defaultValue:null,description:"Custom buttons to display for the WMSLoader",name:"buttons",required:!1,type:{name:"Element | undefined"}}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/components/MlWmsLoader/MlWmsLoader.tsx#MlWmsLoader"]={docgenInfo:q.__docgenInfo,name:"MlWmsLoader",path:"src/components/MlWmsLoader/MlWmsLoader.tsx#MlWmsLoader"})}catch(e){}},4100:(e,t,n)=>{n.d(t,{Z:()=>p,g:()=>m});var r=n(2784),o=n(88138),a=n(91004);function i(e){return function(e){if(Array.isArray(e))return u(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||l(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function s(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,a,i,s=[],l=!0,u=!1;try{if(a=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;l=!1}else for(;!(l=(r=a.call(n)).done)&&(s.push(r.value),s.length!==t);l=!0);}catch(e){u=!0,o=e}finally{try{if(!l&&null!=n.return&&(i=n.return(),Object(i)!==i))return}finally{if(u)throw o}}return s}}(e,t)||l(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function l(e,t){if(e){if("string"==typeof e)return u(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?u(e,t):void 0}}function u(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var c=r.createContext({});function m(e){var t=s(r.useState([]),2),n=t[0],l=t[1],u=s(r.useState([]),2),m=u[0],p=u[1],d=s(r.useState([]),2),f=d[0],g=d[1],y=s(r.useState(o.Z.sourceOptions_tiles[0]),2),b=y[0],h=y[1],v=(0,r.useMemo)((function(){return{layerId:"openmaptiles",sourceOptions:{type:"vector",tiles:[b]}}}),[b]);(0,r.useEffect)((function(){if(console.log("layers",n),n.filter((function(e){return!(null!=e&&e.id)})).length){var e=i(n);e.forEach((function(e){null!=e&&e.id||(e.id=(0,a.Z)())})),l(e)}}),[n]);var S=(0,r.useCallback)((function(e,t){var r,o=null==n||null===(r=n.filter)||void 0===r?void 0:r.call(n,(function(t){return t.id===e}));if(o.length>0){var a=i(n),s=o[0],u=n.indexOf(s),c=t(u);c>=0&&c<=n.length-1&&(a.splice(u,1),a.splice(c,0,s),l(a))}}),[n]),_=(0,r.useCallback)((function(e){S(e,(function(e){return e+1}))}),[S]),O=(0,r.useCallback)((function(e){S(e,(function(e){return e-1}))}),[S]),w={layers:n,setLayers:l,backgroundLayers:m,setBackgroundLayers:p,symbolLayers:f,setSymbolLayers:g,updateStyle:function(e){if(e){var t=[],n=[];e.layers.forEach((function(r,o){"symbol"===r.type?n.push(r):(0===o&&(r.id=e.name||"background"),t.push(r))})),p(t),g(n)}},vtLayerConfig:v,tileUrl:b,setTileUrl:h,moveUp:O,moveDown:_};return r.createElement(c.Provider,{value:w},e.children)}const p=c;try{m.displayName="LayerContextProvider",m.__docgenInfo={description:"",displayName:"LayerContextProvider",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/contexts/LayerContext.tsx#LayerContextProvider"]={docgenInfo:m.__docgenInfo,name:"LayerContextProvider",path:"src/contexts/LayerContext.tsx#LayerContextProvider"})}catch(e){}},27367:(e,t,n)=>{n.d(t,{Z:()=>d,t:()=>p});var r=n(2784),o=n(49164),a=n(635),i=n(4100);function s(e){return function(e){if(Array.isArray(e))return c(e)}(e)||function(e){if("undefined"!=typeof Symbol&&null!=e[Symbol.iterator]||null!=e["@@iterator"])return Array.from(e)}(e)||u(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function l(e,t){return function(e){if(Array.isArray(e))return e}(e)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,a,i,s=[],l=!0,u=!1;try{if(a=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;l=!1}else for(;!(l=(r=a.call(n)).done)&&(s.push(r.value),s.length!==t);l=!0);}catch(e){u=!0,o=e}finally{try{if(!l&&null!=n.return&&(i=n.return(),Object(i)!==i))return}finally{if(u)throw o}}return s}}(e,t)||u(e,t)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()}function u(e,t){if(e){if("string"==typeof e)return c(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?c(e,t):void 0}}function c(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var m=r.createContext({}),p=function(e){var t=e.children,n=l((0,r.useState)(void 0),2),u=n[0],c=n[1],p=l((0,r.useState)([]),2),d=p[0],f=p[1],g=(0,r.useRef)([]),y=(0,r.useRef)({}),b={map:u,setMap:function(e){if(c(e),0===d.length){var t="anonymous_map";f([].concat(s(d),[t])),y.current[t]=e}},maps:y.current,mapIds:d,registerMap:function(e,t){e&&t&&(y.current[e]=t,g.current.push(e),f(s(g.current)),u&&!0!==(null==u?void 0:u.cancelled)||c(t))},removeMap:function e(t){if(t){void 0!==y.current[t]&&delete y.current[t];var n=g.current.indexOf(t);n>-1&&g.current.splice(n,1),f(s(g.current)),0===g.current.length&&u&&c(void 0)}else e("anonymous_map")},mapExists:function(e){return!(e&&-1===Object.keys(y.current).indexOf(e)||!e&&!u)},getMap:function(e){return e&&-1!==d.indexOf(e)?y.current[e]:!e&&u?u:null}};return r.createElement(m.Provider,{value:b},r.createElement(i.g,null,r.createElement(o.Z,{theme:(0,a.Z)("light")},t)))};const d=m;try{p.displayName="MapComponentsProvider",p.__docgenInfo={description:"MapComponentsProvider must be imported and wrapped around component where at least one of its child nodes requires access to a MapLibre-gl or openlayers instance that is registered in this mapContext.\nMapComponentsProvider must be used one level higher than the first use of MapContext.\n\nMapComponentsProvider requires at least one use of the MapLibreMap component somewhere down the component tree that will create the MapLibre-gl object and set the reference at MapContext.map. For MapLibre maps it is a good idea to provide a mapId attribute to the MapLibreMap Component even if you are only using a single map instance at start. It will make a later transition to using multiple instances within the same project much easier.",displayName:"MapComponentsProvider",props:{}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/contexts/MapContext.tsx#MapComponentsProvider"]={docgenInfo:p.__docgenInfo,name:"MapComponentsProvider",path:"src/contexts/MapContext.tsx#MapComponentsProvider"})}catch(e){}},18756:(e,t,n)=>{n.d(t,{D:()=>r});var r=n(2784).createContext({}).Provider},63904:(e,t,n)=>{var r=n(2784),o=n(13980),a=n.n(o),i=n(18756),s=n(37204);function l(e,t){(null==t||t>e.length)&&(t=e.length);for(var n=0,r=new Array(t);n<t;n++)r[n]=e[n];return r}var u=function(e){var t,n,o=(t=(0,r.useState)(null),n=2,function(e){if(Array.isArray(e))return e}(t)||function(e,t){var n=null==e?null:"undefined"!=typeof Symbol&&e[Symbol.iterator]||e["@@iterator"];if(null!=n){var r,o,a,i,s=[],l=!0,u=!1;try{if(a=(n=n.call(e)).next,0===t){if(Object(n)!==n)return;l=!1}else for(;!(l=(r=a.call(n)).done)&&(s.push(r.value),s.length!==t);l=!0);}catch(e){u=!0,o=e}finally{try{if(!l&&null!=n.return&&(i=n.return(),Object(i)!==i))return}finally{if(u)throw o}}return s}}(t,n)||function(e,t){if(e){if("string"==typeof e)return l(e,t);var n=Object.prototype.toString.call(e).slice(8,-1);return"Object"===n&&e.constructor&&(n=e.constructor.name),"Map"===n||"Set"===n?Array.from(e):"Arguments"===n||/^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)?l(e,t):void 0}}(t,n)||function(){throw new TypeError("Invalid attempt to destructure non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method.")}()),a=o[0],u=o[1];(0,r.useEffect)((function(){if(e.url){var t=null;"json"===e.format?t=s.AVB(e.url):"csv"===e.format?t=s.gyn(e.url):"xml"===e.format&&(t=s.LsS(e.url)),t&&t.then((function(t){if("xml"===e.format){if(e.nodeType){var n=[];t.querySelectorAll(e.nodeType).forEach((function(t){n.push(e.formatData(t))})),u(n)}}else e.data_property&&(t=t[e.data_property]),"function"==typeof e.formatData?u(t.map(e.formatData)):u(t);"function"==typeof e.onData&&e.onData()}))}}),[e.url,e]);var c={data:a,setData:u};return r.createElement(i.D,{value:c},e.children)};u.propTypes={children:a().node.isRequired},u.__docgenInfo={description:"",methods:[],displayName:"SimpleDataProvider",props:{children:{description:"",type:{name:"node"},required:!0}}},"undefined"!=typeof STORYBOOK_REACT_CLASSES&&(STORYBOOK_REACT_CLASSES["src/contexts/SimpleDataProvider.js"]={name:"SimpleDataProvider",docgenInfo:u.__docgenInfo,path:"src/contexts/SimpleDataProvider.js"})}}]);